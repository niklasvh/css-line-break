// Generated tests from LineBreakTest.txt, do NOT modify
'use strict';
import {equal} from 'assert';
import {lineBreakAtIndex, codePointsToCharacterClasses, BREAK_MANDATORY, BREAK_ALLOWED} from '../src/LineBreak';

const test = (codePoints: number[], breaks: string[]) => {
    breaks.forEach((c: string, i: number) => {
        const b = lineBreakAtIndex(codePoints, i).replace(BREAK_MANDATORY, BREAK_ALLOWED);
        equal(b, c, `${b} at ${i}, expected ${c} with ${codePointsToCharacterClasses(codePoints)}`);
    });
};

describe('LineBreakTest.txt', () => {
    it('× [0.3] NUMBER SIGN (AL) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0023, 0x0023], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0023, 0x2014], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0023, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0023, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0023, 0x0009], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0023, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0023, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0023, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0023, 0x000B], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0023, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0023, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0023, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0023, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0023, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0023, 0x007D], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0023, 0x000D], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0023, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0023, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0023, 0x0021], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0023, 0x00A0], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0023, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0023, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0023, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0023, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0023, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0023, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0023, 0x05D0], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0023, 0x002D], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0023, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0023, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0023, 0x231A], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0023, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0023, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0023, 0x2024], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0023, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0023, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0023, 0x002C], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0023, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0023, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0023, 0x1100], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0023, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0023, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0023, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0023, 0x1160], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0023, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0023, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0023, 0x000A], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0023, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0023, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0023, 0x0085], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0023, 0x17D6], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0023, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0023, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0023, 0x0030], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0023, 0x2329], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0023, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0023, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0023, 0x0025], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0023, 0x0024], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0023, 0x0022], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0023, 0x0020], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0023, 0x002F], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0023, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0023, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0023, 0x2060], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0023, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0023, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0023, 0x200B], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0023, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0023, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0023, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0023, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0023, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0023, 0x261D], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0023, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0023, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0023, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0023, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0023, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0023, 0x0029], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0023, 0x0028], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0023, 0x0001], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0023, 0x200D], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0023, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0023, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0023, 0x00A7], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0023, 0x50005], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0023, 0x0E01], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0023, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0023, 0x3041], ["×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0023, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0023, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] NUMBER SIGN (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0023, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2014, 0x0023], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [17.0] EM DASH (B2) ÷ [0.3]', () => test([0x2014, 0x2014], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [17.0] EM DASH (B2) ÷ [0.3]', () => test([0x2014, 0x0020, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [17.0] EM DASH (B2) ÷ [0.3]', () => test([0x2014, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [17.0] EM DASH (B2) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x2014], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2014, 0x0009], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2014, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2014, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2014, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2014, 0x000B], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2014, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2014, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2014, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2014, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2014, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2014, 0x007D], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2014, 0x000D], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2014, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2014, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2014, 0x0021], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2014, 0x00A0], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2014, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2014, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2014, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2014, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2014, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2014, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2014, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2014, 0x002D], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2014, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2014, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x2014, 0x231A], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x2014, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x2014, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2014, 0x2024], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2014, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2014, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2014, 0x002C], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2014, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x2014, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2014, 0x1100], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2014, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2014, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2014, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2014, 0x1160], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2014, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2014, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2014, 0x000A], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2014, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2014, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2014, 0x0085], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2014, 0x17D6], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2014, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2014, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2014, 0x0030], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2014, 0x2329], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2014, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2014, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2014, 0x0025], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2014, 0x0024], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2014, 0x0022], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2014, 0x0020], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2014, 0x002F], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2014, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x2014, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2014, 0x2060], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2014, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2014, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2014, 0x200B], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2014, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2014, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2014, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2014, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2014, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2014, 0x261D], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2014, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2014, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2014, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2014, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2014, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2014, 0x0029], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2014, 0x0028], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2014, 0x0001], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2014, 0x200D], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2014, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2014, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2014, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2014, 0x50005], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2014, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2014, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2014, 0x3041], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2014, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2014, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2014, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0009, 0x0023], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0009, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0009, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0009, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0009, 0x0009], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0009, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0009, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0009, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0009, 0x000B], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0009, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0009, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0009, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0009, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0009, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0009, 0x007D], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0009, 0x000D], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0009, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0009, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0009, 0x0021], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0009, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0009, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0009, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0009, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0009, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0009, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0009, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0009, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0009, 0x002D], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0009, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0009, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0009, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0009, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0009, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0009, 0x2024], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0009, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0009, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0009, 0x002C], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0009, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0009, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0009, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0009, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0009, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0009, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0009, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0009, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0009, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0009, 0x000A], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0009, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0009, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0009, 0x0085], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0009, 0x17D6], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0009, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0009, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0009, 0x0030], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0009, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0009, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0009, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0009, 0x0025], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0009, 0x0024], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0009, 0x0022], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0009, 0x0020], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0009, 0x002F], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0009, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0009, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0009, 0x2060], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0009, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0009, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0009, 0x200B], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0009, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0009, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0009, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0009, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0009, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0009, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0009, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0009, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0009, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0009, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0009, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0009, 0x0029], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0009, 0x0028], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0009, 0x0001], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0009, 0x200D], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0009, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0009, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0009, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0009, 0x50005], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0009, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0009, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0009, 0x3041], ["×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0009, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0009, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] <CHARACTER TABULATION> (BA) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0009, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00B4, 0x0023], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] EM DASH (B2) ÷ [0.3]', () => test([0x00B4, 0x2014], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] EM DASH (B2) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00B4, 0x0009], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00B4, 0x00B4], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00B4, 0x000B], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00B4, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00B4, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00B4, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00B4, 0x007D], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00B4, 0x000D], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00B4, 0x0021], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00B4, 0x00A0], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00B4, 0xAC00], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00B4, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00B4, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00B4, 0xAC01], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00B4, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00B4, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00B4, 0x05D0], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00B4, 0x002D], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] WATCH (ID) ÷ [0.3]', () => test([0x00B4, 0x231A], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] WATCH (ID) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00B4, 0x2024], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00B4, 0x002C], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00B4, 0x1100], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00B4, 0x11A8], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00B4, 0x1160], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00B4, 0x000A], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00B4, 0x0085], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00B4, 0x17D6], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00B4, 0x0030], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00B4, 0x2329], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00B4, 0x0025], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00B4, 0x0024], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00B4, 0x0022], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00B4, 0x0020], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00B4, 0x002F], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00B4, 0x2060], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00B4, 0x200B], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00B4, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00B4, 0x261D], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00B4, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00B4, 0x0029], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00B4, 0x0028], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00B4, 0x0001], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00B4, 0x200D], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00B4, 0x00A7], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00B4, 0x50005], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.04] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00B4, 0x0E01], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.04] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00B4, 0x3041], ["×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00B4, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] ACUTE ACCENT (BB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00B4, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000B, 0x0023], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0023], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0023], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0023], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] EM DASH (B2) ÷ [0.3]', () => test([0x000B, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x000B, 0x0020, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x000B, 0x0308, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x2014], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000B, 0x0009], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0009], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0009], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0009], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000B, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000B, 0x0020, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000B, 0x0308, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x00B4], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000B, 0x000B], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000B, 0x0020, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000B, 0x0308, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x000B], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000B, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000B, 0x0020, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000B, 0x0308, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0xFFFC], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000B, 0x007D], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x007D], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000B, 0x000D], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000B, 0x0020, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000B, 0x0308, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x000D], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000B, 0x0021], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0021], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000B, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x00A0], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x00A0], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x00A0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000B, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000B, 0x0020, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000B, 0x0308, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0xAC00], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000B, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000B, 0x0020, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000B, 0x0308, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0xAC01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000B, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x05D0], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x05D0], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x05D0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000B, 0x002D], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000B, 0x0020, 0x002D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000B, 0x0308, 0x002D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x002D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] WATCH (ID) ÷ [0.3]', () => test([0x000B, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x000B, 0x0020, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x000B, 0x0308, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x231A], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000B, 0x2024], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000B, 0x0020, 0x2024], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000B, 0x0308, 0x2024], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x2024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMMA (IS) ÷ [0.3]', () => test([0x000B, 0x002C], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x000B, 0x0020, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x000B, 0x0308, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x002C], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000B, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x1100], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000B, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000B, 0x0020, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000B, 0x0308, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x11A8], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000B, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000B, 0x0020, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000B, 0x0308, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x1160], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000B, 0x000A], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000B, 0x0020, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000B, 0x0308, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x000A], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000B, 0x0085], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0085], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000B, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000B, 0x0020, 0x17D6], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000B, 0x0308, 0x17D6], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x17D6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000B, 0x0030], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0030], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0030], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0030], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000B, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000B, 0x0020, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000B, 0x0308, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x2329], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000B, 0x0025], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0025], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0025], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0025], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000B, 0x0024], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0024], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0024], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000B, 0x0022], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0022], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0022], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0022], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [0.3]', () => test([0x000B, 0x0020], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SOLIDUS (SY) ÷ [0.3]', () => test([0x000B, 0x002F], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000B, 0x0020, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x000B, 0x0308, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x002F], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000B, 0x2060], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000B, 0x0020, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000B, 0x0308, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x2060], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000B, 0x200B], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000B, 0x0020, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000B, 0x0308, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x200B], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000B, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000B, 0x0020, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000B, 0x0308, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x1F1E6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000B, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000B, 0x0020, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000B, 0x0308, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x261D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000B, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000B, 0x0020, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000B, 0x0308, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x1F3FB], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000B, 0x0029], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000B, 0x0028], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0028], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0028], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0028], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000B, 0x0001], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0001], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0001], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0001], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000B, 0x200D], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000B, 0x0020, 0x200D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000B, 0x0308, 0x200D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x200D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000B, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x00A7], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x00A7], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x00A7], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000B, 0x50005], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x50005], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x50005], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x50005], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000B, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000B, 0x0020, 0x0E01], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0E01], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x0E01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000B, 0x3041], ["×","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000B, 0x0020, 0x3041], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000B, 0x0308, 0x3041], ["×","÷","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000B, 0x0308, 0x0020, 0x3041], ["×","÷","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xFFFC, 0x0023], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] EM DASH (B2) ÷ [0.3]', () => test([0xFFFC, 0x2014], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] EM DASH (B2) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xFFFC, 0x0009], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xFFFC, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xFFFC, 0x000B], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xFFFC, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xFFFC, 0x007D], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xFFFC, 0x000D], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xFFFC, 0x0021], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xFFFC, 0x00A0], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xFFFC, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xFFFC, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xFFFC, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xFFFC, 0x002D], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] WATCH (ID) ÷ [0.3]', () => test([0xFFFC, 0x231A], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] WATCH (ID) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xFFFC, 0x2024], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xFFFC, 0x002C], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xFFFC, 0x1100], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xFFFC, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xFFFC, 0x1160], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xFFFC, 0x000A], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xFFFC, 0x0085], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xFFFC, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xFFFC, 0x0030], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xFFFC, 0x2329], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xFFFC, 0x0025], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xFFFC, 0x0024], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xFFFC, 0x0022], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xFFFC, 0x0020], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xFFFC, 0x002F], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xFFFC, 0x2060], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xFFFC, 0x200B], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xFFFC, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xFFFC, 0x261D], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xFFFC, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xFFFC, 0x0029], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xFFFC, 0x0028], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xFFFC, 0x0001], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xFFFC, 0x200D], ["×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xFFFC, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xFFFC, 0x50005], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xFFFC, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xFFFC, 0x3041], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xFFFC, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xFFFC, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x007D, 0x0023], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x007D, 0x2014], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x007D, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x007D, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x007D, 0x0009], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x007D, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x007D, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x007D, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x007D, 0x000B], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x007D, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x007D, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x007D, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x007D, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x007D, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x007D, 0x007D], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x007D, 0x000D], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x007D, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x007D, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x007D, 0x0021], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x007D, 0x00A0], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x007D, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x007D, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x007D, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x007D, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x007D, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x007D, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x007D, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x007D, 0x002D], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x007D, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x007D, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x007D, 0x231A], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x007D, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x007D, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x007D, 0x2024], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x007D, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x007D, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x007D, 0x002C], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x007D, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x007D, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x007D, 0x1100], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x007D, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x007D, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x007D, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x007D, 0x1160], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x007D, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x007D, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x007D, 0x000A], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x007D, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x007D, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x007D, 0x0085], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x007D, 0x17D6], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x007D, 0x0020, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x007D, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x17D6], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x007D, 0x0030], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x007D, 0x2329], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x007D, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x007D, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x007D, 0x0025], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x007D, 0x0024], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x007D, 0x0022], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x007D, 0x0020], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x007D, 0x002F], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x007D, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x007D, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x007D, 0x2060], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x007D, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x007D, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x007D, 0x200B], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x007D, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x007D, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x007D, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x007D, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x007D, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x007D, 0x261D], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x007D, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x007D, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x007D, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x007D, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x007D, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x007D, 0x0029], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x007D, 0x0028], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x007D, 0x0001], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x007D, 0x200D], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x007D, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x007D, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x007D, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x007D, 0x50005], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x007D, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x007D, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x007D, 0x3041], ["×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x007D, 0x0020, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x007D, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] RIGHT CURLY BRACKET (CL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x007D, 0x0308, 0x0020, 0x3041], ["×","×","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000D, 0x0023], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0023], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0023], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0023], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] EM DASH (B2) ÷ [0.3]', () => test([0x000D, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x000D, 0x0020, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x000D, 0x0308, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x2014], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000D, 0x0009], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0009], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0009], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0009], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000D, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000D, 0x0020, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000D, 0x0308, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x00B4], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000D, 0x000B], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000D, 0x0020, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000D, 0x0308, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x000B], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000D, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000D, 0x0020, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000D, 0x0308, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0xFFFC], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000D, 0x007D], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x007D], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000D, 0x000D], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000D, 0x0020, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000D, 0x0308, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x000D], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000D, 0x0021], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0021], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000D, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x00A0], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x00A0], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x00A0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000D, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000D, 0x0020, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000D, 0x0308, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0xAC00], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000D, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000D, 0x0020, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000D, 0x0308, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0xAC01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000D, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x05D0], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x05D0], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x05D0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000D, 0x002D], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000D, 0x0020, 0x002D], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000D, 0x0308, 0x002D], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x002D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] WATCH (ID) ÷ [0.3]', () => test([0x000D, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x000D, 0x0020, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x000D, 0x0308, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x231A], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000D, 0x2024], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000D, 0x0020, 0x2024], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000D, 0x0308, 0x2024], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x2024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMMA (IS) ÷ [0.3]', () => test([0x000D, 0x002C], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x000D, 0x0020, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x000D, 0x0308, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x002C], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000D, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x1100], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000D, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000D, 0x0020, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000D, 0x0308, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x11A8], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000D, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000D, 0x0020, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000D, 0x0308, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x1160], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) × [5.01] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000D, 0x000A], ["×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000D, 0x0020, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000D, 0x0308, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x000A], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000D, 0x0085], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0085], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000D, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000D, 0x0020, 0x17D6], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000D, 0x0308, 0x17D6], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x17D6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000D, 0x0030], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0030], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0030], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0030], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000D, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000D, 0x0020, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000D, 0x0308, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x2329], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000D, 0x0025], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0025], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0025], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0025], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000D, 0x0024], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0024], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0024], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000D, 0x0022], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0022], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0022], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0022], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [0.3]', () => test([0x000D, 0x0020], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000D, 0x002F], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000D, 0x0020, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x000D, 0x0308, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x002F], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000D, 0x2060], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000D, 0x0020, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000D, 0x0308, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x2060], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000D, 0x200B], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000D, 0x0020, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000D, 0x0308, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x200B], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000D, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000D, 0x0020, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000D, 0x0308, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x1F1E6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000D, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000D, 0x0020, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000D, 0x0308, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x261D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000D, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000D, 0x0020, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000D, 0x0308, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x1F3FB], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000D, 0x0029], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000D, 0x0028], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0028], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0028], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0028], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000D, 0x0001], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0001], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0001], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0001], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000D, 0x200D], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000D, 0x0020, 0x200D], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000D, 0x0308, 0x200D], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x200D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000D, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x00A7], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x00A7], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x00A7], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000D, 0x50005], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x50005], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x50005], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x50005], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000D, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000D, 0x0020, 0x0E01], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0E01], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x0E01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000D, 0x3041], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000D, 0x0020, 0x3041], ["×","÷","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000D, 0x0308, 0x3041], ["×","÷","×","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000D, 0x0308, 0x0020, 0x3041], ["×","÷","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0021, 0x0023], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0021, 0x2014], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0021, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0021, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0021, 0x0009], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0021, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0021, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0021, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0021, 0x000B], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0021, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0021, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0021, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0021, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0021, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0021, 0x007D], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0021, 0x000D], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0021, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0021, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0021, 0x0021], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0021, 0x00A0], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0021, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0021, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0021, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0021, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0021, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0021, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0021, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0021, 0x002D], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0021, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0021, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0021, 0x231A], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0021, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0021, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0021, 0x2024], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0021, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0021, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0021, 0x002C], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0021, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0021, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0021, 0x1100], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0021, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0021, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0021, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0021, 0x1160], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0021, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0021, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0021, 0x000A], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0021, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0021, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0021, 0x0085], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0021, 0x17D6], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0021, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0021, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0021, 0x0030], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0021, 0x2329], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0021, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0021, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0021, 0x0025], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0021, 0x0024], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0021, 0x0022], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0021, 0x0020], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0021, 0x002F], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0021, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0021, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0021, 0x2060], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0021, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0021, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0021, 0x200B], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0021, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0021, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0021, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0021, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0021, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0021, 0x261D], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0021, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0021, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0021, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0021, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0021, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0021, 0x0029], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0021, 0x0028], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0021, 0x0001], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0021, 0x200D], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0021, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0021, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0021, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0021, 0x50005], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0021, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0021, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0021, 0x3041], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0021, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0021, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0021, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A0, 0x0023], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A0, 0x2014], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A0, 0x0009], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A0, 0x00B4], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A0, 0x000B], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A0, 0xFFFC], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A0, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A0, 0x0308, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A0, 0x007D], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A0, 0x000D], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A0, 0x0021], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A0, 0x00A0], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A0, 0xAC00], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A0, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A0, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A0, 0xAC01], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A0, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A0, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A0, 0x05D0], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A0, 0x002D], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] WATCH (ID) ÷ [0.3]', () => test([0x00A0, 0x231A], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] WATCH (ID) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A0, 0x2024], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] COMMA (IS) ÷ [0.3]', () => test([0x00A0, 0x002C], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] COMMA (IS) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A0, 0x1100], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A0, 0x11A8], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A0, 0x1160], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A0, 0x000A], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A0, 0x0085], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A0, 0x17D6], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A0, 0x0030], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A0, 0x2329], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A0, 0x0025], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A0, 0x0024], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A0, 0x0022], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A0, 0x0020], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A0, 0x002F], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A0, 0x2060], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A0, 0x200B], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A0, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A0, 0x261D], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A0, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A0, 0x0029], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A0, 0x0028], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A0, 0x0001], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A0, 0x200D], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A0, 0x00A7], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A0, 0x50005], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A0, 0x0E01], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [12.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A0, 0x3041], ["×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A0, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] NO-BREAK SPACE (GL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A0, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC00, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC00, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC00, 0x0009], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC00, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC00, 0x000B], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC00, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC00, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC00, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC00, 0x007D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC00, 0x000D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC00, 0x0021], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC00, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC00, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC00, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC00, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC00, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC00, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC00, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC00, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC00, 0x002D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0xAC00, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC00, 0x2024], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xAC00, 0x002C], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC00, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [26.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC00, 0x11A8], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [26.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC00, 0x1160], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC00, 0x000A], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC00, 0x0085], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC00, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC00, 0x0030], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC00, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC00, 0x0025], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC00, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC00, 0x0022], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC00, 0x0020], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC00, 0x002F], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC00, 0x2060], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC00, 0x200B], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC00, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC00, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC00, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC00, 0x0029], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC00, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC00, 0x0001], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC00, 0x200D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC00, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC00, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC00, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC00, 0x3041], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC00, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GA (H2) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC00, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC01, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC01, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC01, 0x0009], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC01, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC01, 0x000B], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC01, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC01, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC01, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC01, 0x007D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC01, 0x000D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC01, 0x0021], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC01, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC01, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC01, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC01, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC01, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC01, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC01, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC01, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC01, 0x002D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0xAC01, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC01, 0x2024], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xAC01, 0x002C], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC01, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [26.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC01, 0x11A8], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC01, 0x1160], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC01, 0x000A], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC01, 0x0085], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC01, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC01, 0x0030], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC01, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC01, 0x0025], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC01, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC01, 0x0022], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC01, 0x0020], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC01, 0x002F], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC01, 0x2060], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC01, 0x200B], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC01, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC01, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC01, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC01, 0x0029], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC01, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC01, 0x0001], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC01, 0x200D], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC01, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC01, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC01, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC01, 0x3041], ["×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC01, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE GAG (H3) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xAC01, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x05D0, 0x0023], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x05D0, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x05D0, 0x0009], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x05D0, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x05D0, 0x000B], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x05D0, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x05D0, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x05D0, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x05D0, 0x007D], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x05D0, 0x000D], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x05D0, 0x0021], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x05D0, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x05D0, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x05D0, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x05D0, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x05D0, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x05D0, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x05D0, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x05D0, 0x05D0], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x05D0, 0x002D], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x05D0, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x05D0, 0x2024], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x05D0, 0x002C], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x05D0, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x05D0, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x05D0, 0x1160], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x05D0, 0x000A], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x05D0, 0x0085], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x05D0, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x05D0, 0x0030], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x05D0, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x05D0, 0x0025], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x05D0, 0x0024], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x05D0, 0x0022], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x05D0, 0x0020], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x05D0, 0x002F], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x05D0, 0x2060], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x05D0, 0x200B], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x05D0, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x05D0, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x05D0, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x05D0, 0x0029], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x05D0, 0x0028], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x05D0, 0x0001], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x05D0, 0x200D], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x05D0, 0x00A7], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x05D0, 0x50005], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x05D0, 0x0E01], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x05D0, 0x3041], ["×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x05D0, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x05D0, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002D, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x002D, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x002D, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x002D, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002D, 0x0009], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002D, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002D, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002D, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002D, 0x000B], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002D, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002D, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002D, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002D, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002D, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002D, 0x007D], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002D, 0x000D], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002D, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002D, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002D, 0x0021], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002D, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002D, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002D, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002D, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002D, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002D, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002D, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002D, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002D, 0x002D], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002D, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002D, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x002D, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x002D, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x002D, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002D, 0x2024], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002D, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002D, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002D, 0x002C], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002D, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x002D, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002D, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002D, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002D, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002D, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002D, 0x1160], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002D, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002D, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002D, 0x000A], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002D, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002D, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002D, 0x0085], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002D, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002D, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002D, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [25.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002D, 0x0030], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002D, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002D, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002D, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002D, 0x0025], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002D, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002D, 0x0022], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002D, 0x0020], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002D, 0x002F], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002D, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x002D, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002D, 0x2060], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002D, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002D, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002D, 0x200B], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002D, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002D, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002D, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002D, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002D, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002D, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002D, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002D, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002D, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002D, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002D, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002D, 0x0029], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002D, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002D, 0x0001], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002D, 0x200D], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002D, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002D, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002D, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002D, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002D, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002D, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002D, 0x3041], ["×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002D, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002D, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002D, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x231A, 0x0023], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x231A, 0x2014], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x231A, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x231A, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x231A, 0x0009], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x231A, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x231A, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x231A, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x231A, 0x000B], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x231A, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x231A, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x231A, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x231A, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x231A, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x231A, 0x007D], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x231A, 0x000D], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x231A, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x231A, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x231A, 0x0021], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x231A, 0x00A0], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x231A, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x231A, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x231A, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x231A, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x231A, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x231A, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x231A, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x231A, 0x002D], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x231A, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x231A, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x231A, 0x231A], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x231A, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x231A, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x231A, 0x2024], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x231A, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x231A, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x231A, 0x002C], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x231A, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x231A, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x231A, 0x1100], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x231A, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x231A, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x231A, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x231A, 0x1160], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x231A, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x231A, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x231A, 0x000A], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x231A, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x231A, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x231A, 0x0085], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x231A, 0x17D6], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x231A, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x231A, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x231A, 0x0030], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x231A, 0x2329], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x231A, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x231A, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x231A, 0x0025], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x231A, 0x0024], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x231A, 0x0022], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x231A, 0x0020], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x231A, 0x002F], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x231A, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x231A, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x231A, 0x2060], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x231A, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x231A, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x231A, 0x200B], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x231A, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x231A, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x231A, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x231A, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x231A, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x231A, 0x261D], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x231A, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x231A, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x231A, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x231A, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x231A, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x231A, 0x0029], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x231A, 0x0028], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x231A, 0x0001], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x231A, 0x200D], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x231A, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x231A, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x231A, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x231A, 0x50005], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x231A, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x231A, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x231A, 0x3041], ["×","×","÷"]));
    it('× [0.3] WATCH (ID) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x231A, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x231A, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] WATCH (ID) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x231A, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2024, 0x0023], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x2024, 0x2014], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x2024, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x2024, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2024, 0x0009], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2024, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2024, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2024, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2024, 0x000B], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2024, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2024, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2024, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2024, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2024, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2024, 0x007D], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2024, 0x000D], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2024, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2024, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2024, 0x0021], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2024, 0x00A0], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2024, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2024, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2024, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2024, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2024, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2024, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2024, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2024, 0x002D], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2024, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2024, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x2024, 0x231A], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x2024, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x2024, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2024, 0x2024], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2024, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2024, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2024, 0x002C], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2024, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x2024, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2024, 0x1100], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2024, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2024, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2024, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2024, 0x1160], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2024, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2024, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2024, 0x000A], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2024, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2024, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2024, 0x0085], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2024, 0x17D6], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2024, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2024, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2024, 0x0030], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2024, 0x2329], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2024, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2024, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2024, 0x0025], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2024, 0x0024], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2024, 0x0022], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2024, 0x0020], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2024, 0x002F], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2024, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x2024, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2024, 0x2060], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2024, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2024, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2024, 0x200B], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2024, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2024, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2024, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2024, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2024, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2024, 0x261D], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2024, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2024, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2024, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2024, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2024, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2024, 0x0029], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2024, 0x0028], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2024, 0x0001], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2024, 0x200D], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2024, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2024, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2024, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2024, 0x50005], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2024, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2024, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2024, 0x3041], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2024, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2024, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2024, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [29.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002C, 0x0023], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [29.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x002C, 0x2014], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x002C, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x002C, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002C, 0x0009], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002C, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002C, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002C, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002C, 0x000B], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002C, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002C, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002C, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002C, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002C, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002C, 0x007D], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002C, 0x000D], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002C, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002C, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002C, 0x0021], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002C, 0x00A0], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002C, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002C, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002C, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002C, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002C, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002C, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [29.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002C, 0x05D0], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [29.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002C, 0x002D], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002C, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002C, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x002C, 0x231A], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x002C, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x002C, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002C, 0x2024], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002C, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002C, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002C, 0x002C], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002C, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x002C, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002C, 0x1100], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002C, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002C, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002C, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002C, 0x1160], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002C, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002C, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002C, 0x000A], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002C, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002C, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002C, 0x0085], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002C, 0x17D6], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002C, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002C, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002C, 0x0030], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002C, 0x2329], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002C, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002C, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002C, 0x0025], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002C, 0x0024], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002C, 0x0022], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002C, 0x0020], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002C, 0x002F], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002C, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x002C, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002C, 0x2060], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002C, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002C, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002C, 0x200B], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002C, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002C, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002C, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002C, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002C, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002C, 0x261D], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002C, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002C, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002C, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002C, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002C, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002C, 0x0029], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] COMMA (IS) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002C, 0x0028], ["×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002C, 0x0001], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002C, 0x200D], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002C, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002C, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [29.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002C, 0x00A7], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [29.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [29.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002C, 0x50005], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [29.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [29.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002C, 0x0E01], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002C, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [29.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002C, 0x3041], ["×","×","÷"]));
    it('× [0.3] COMMA (IS) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002C, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002C, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] COMMA (IS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002C, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1100, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1100, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1100, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1100, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1100, 0x0009], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1100, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1100, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1100, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1100, 0x000B], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1100, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1100, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1100, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1100, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1100, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1100, 0x007D], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1100, 0x000D], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1100, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1100, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1100, 0x0021], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1100, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [26.01] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1100, 0xAC00], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1100, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.01] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1100, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [26.01] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1100, 0xAC01], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1100, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.01] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1100, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1100, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1100, 0x002D], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1100, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1100, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1100, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1100, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1100, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1100, 0x2024], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1100, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1100, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1100, 0x002C], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1100, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x1100, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [26.01] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1100, 0x1100], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.01] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1100, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1100, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1100, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [26.01] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1100, 0x1160], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1100, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.01] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1100, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1100, 0x000A], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1100, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1100, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1100, 0x0085], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1100, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1100, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1100, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1100, 0x0030], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1100, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1100, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1100, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1100, 0x0025], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1100, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1100, 0x0022], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1100, 0x0020], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1100, 0x002F], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1100, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x1100, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1100, 0x2060], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1100, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1100, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1100, 0x200B], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1100, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1100, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1100, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1100, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1100, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1100, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1100, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1100, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1100, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1100, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1100, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1100, 0x0029], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1100, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1100, 0x0001], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1100, 0x200D], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1100, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1100, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1100, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1100, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1100, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1100, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1100, 0x3041], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1100, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1100, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1100, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x11A8, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x11A8, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x11A8, 0x0009], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x11A8, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x11A8, 0x000B], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x11A8, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x11A8, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x11A8, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x11A8, 0x007D], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x11A8, 0x000D], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x11A8, 0x0021], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x11A8, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x11A8, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x11A8, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x11A8, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x11A8, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x11A8, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x11A8, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x11A8, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x11A8, 0x002D], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x11A8, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x11A8, 0x2024], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x11A8, 0x002C], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x11A8, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [26.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x11A8, 0x11A8], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x11A8, 0x1160], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x11A8, 0x000A], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x11A8, 0x0085], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x11A8, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x11A8, 0x0030], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x11A8, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x11A8, 0x0025], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x11A8, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x11A8, 0x0022], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x11A8, 0x0020], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x11A8, 0x002F], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x11A8, 0x2060], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x11A8, 0x200B], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x11A8, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x11A8, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x11A8, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x11A8, 0x0029], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x11A8, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x11A8, 0x0001], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x11A8, 0x200D], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x11A8, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x11A8, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x11A8, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x11A8, 0x3041], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x11A8, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x11A8, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1160, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1160, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1160, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1160, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1160, 0x0009], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1160, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1160, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1160, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1160, 0x000B], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1160, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1160, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1160, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1160, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1160, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1160, 0x007D], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1160, 0x000D], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1160, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1160, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1160, 0x0021], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1160, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1160, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1160, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1160, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1160, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1160, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1160, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1160, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1160, 0x002D], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1160, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1160, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1160, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1160, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1160, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1160, 0x2024], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1160, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1160, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1160, 0x002C], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1160, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x1160, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1160, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [26.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1160, 0x11A8], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1160, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1160, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [26.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1160, 0x1160], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1160, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [26.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1160, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1160, 0x000A], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1160, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1160, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1160, 0x0085], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1160, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1160, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1160, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1160, 0x0030], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1160, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1160, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1160, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1160, 0x0025], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1160, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1160, 0x0022], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1160, 0x0020], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1160, 0x002F], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1160, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x1160, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1160, 0x2060], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1160, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1160, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1160, 0x200B], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1160, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1160, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1160, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1160, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1160, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1160, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1160, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1160, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1160, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1160, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1160, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1160, 0x0029], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1160, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1160, 0x0001], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1160, 0x200D], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1160, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1160, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1160, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1160, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1160, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1160, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1160, 0x3041], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1160, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1160, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1160, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000A, 0x0023], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0023], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0023], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0023], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] EM DASH (B2) ÷ [0.3]', () => test([0x000A, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x000A, 0x0020, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x000A, 0x0308, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x2014], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000A, 0x0009], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0009], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0009], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0009], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000A, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000A, 0x0020, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000A, 0x0308, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x00B4], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000A, 0x000B], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000A, 0x0020, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000A, 0x0308, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x000B], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000A, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000A, 0x0020, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000A, 0x0308, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0xFFFC], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000A, 0x007D], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x007D], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000A, 0x000D], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000A, 0x0020, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000A, 0x0308, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x000D], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000A, 0x0021], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0021], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000A, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x00A0], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x00A0], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x00A0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000A, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000A, 0x0020, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000A, 0x0308, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0xAC00], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000A, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000A, 0x0020, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000A, 0x0308, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0xAC01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000A, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x05D0], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x05D0], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x05D0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000A, 0x002D], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000A, 0x0020, 0x002D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000A, 0x0308, 0x002D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x002D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] WATCH (ID) ÷ [0.3]', () => test([0x000A, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x000A, 0x0020, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x000A, 0x0308, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x231A], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000A, 0x2024], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000A, 0x0020, 0x2024], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000A, 0x0308, 0x2024], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x2024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMMA (IS) ÷ [0.3]', () => test([0x000A, 0x002C], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x000A, 0x0020, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x000A, 0x0308, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x002C], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000A, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x1100], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000A, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000A, 0x0020, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000A, 0x0308, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x11A8], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000A, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000A, 0x0020, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000A, 0x0308, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x1160], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000A, 0x000A], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000A, 0x0020, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000A, 0x0308, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x000A], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000A, 0x0085], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0085], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000A, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000A, 0x0020, 0x17D6], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000A, 0x0308, 0x17D6], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x17D6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000A, 0x0030], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0030], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0030], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0030], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000A, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000A, 0x0020, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000A, 0x0308, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x2329], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000A, 0x0025], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0025], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0025], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0025], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000A, 0x0024], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0024], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0024], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000A, 0x0022], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0022], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0022], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0022], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [0.3]', () => test([0x000A, 0x0020], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x000A, 0x002F], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000A, 0x0020, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x000A, 0x0308, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x002F], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000A, 0x2060], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000A, 0x0020, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000A, 0x0308, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x2060], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000A, 0x200B], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000A, 0x0020, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000A, 0x0308, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x200B], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000A, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000A, 0x0020, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000A, 0x0308, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x1F1E6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000A, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000A, 0x0020, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000A, 0x0308, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x261D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000A, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000A, 0x0020, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000A, 0x0308, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x1F3FB], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000A, 0x0029], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000A, 0x0028], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0028], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0028], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0028], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000A, 0x0001], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0001], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0001], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0001], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000A, 0x200D], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000A, 0x0020, 0x200D], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000A, 0x0308, 0x200D], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x200D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000A, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x00A7], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x00A7], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x00A7], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000A, 0x50005], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x50005], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x50005], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x50005], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000A, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000A, 0x0020, 0x0E01], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0E01], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x0E01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000A, 0x3041], ["×","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000A, 0x0020, 0x3041], ["×","÷","÷","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000A, 0x0308, 0x3041], ["×","÷","×","÷"]));
    it('× [0.3] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000A, 0x0308, 0x0020, 0x3041], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0085, 0x0023], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0023], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0023], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0023], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] EM DASH (B2) ÷ [0.3]', () => test([0x0085, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0085, 0x0020, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0085, 0x0308, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x2014], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0085, 0x0009], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0009], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0009], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0009], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0085, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0085, 0x0020, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0085, 0x0308, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x00B4], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0085, 0x000B], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0085, 0x0020, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0085, 0x0308, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x000B], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0085, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0085, 0x0020, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0085, 0x0308, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0xFFFC], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0085, 0x007D], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x007D], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0085, 0x000D], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0085, 0x0020, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0085, 0x0308, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x000D], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0085, 0x0021], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0021], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0085, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x00A0], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x00A0], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x00A0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0085, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0085, 0x0020, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0085, 0x0308, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0xAC00], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0085, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0085, 0x0020, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0085, 0x0308, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0xAC01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0085, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x05D0], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x05D0], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x05D0], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0085, 0x002D], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0085, 0x0020, 0x002D], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0085, 0x0308, 0x002D], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x002D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] WATCH (ID) ÷ [0.3]', () => test([0x0085, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0085, 0x0020, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0085, 0x0308, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x231A], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0085, 0x2024], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0085, 0x0020, 0x2024], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0085, 0x0308, 0x2024], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x2024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMMA (IS) ÷ [0.3]', () => test([0x0085, 0x002C], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0085, 0x0020, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0085, 0x0308, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x002C], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0085, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x1100], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0085, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0085, 0x0020, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0085, 0x0308, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x11A8], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0085, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0085, 0x0020, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0085, 0x0308, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x1160], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0085, 0x000A], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0085, 0x0020, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0085, 0x0308, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x000A], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0085, 0x0085], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0085], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0085, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0085, 0x0020, 0x17D6], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0085, 0x0308, 0x17D6], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x17D6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0085, 0x0030], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0030], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0030], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0030], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0085, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0085, 0x0020, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0085, 0x0308, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x2329], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0085, 0x0025], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0025], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0025], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0025], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0085, 0x0024], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0024], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0024], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0024], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0085, 0x0022], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0022], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0022], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0022], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [0.3]', () => test([0x0085, 0x0020], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SOLIDUS (SY) ÷ [0.3]', () => test([0x0085, 0x002F], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0085, 0x0020, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0085, 0x0308, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x002F], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0085, 0x2060], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0085, 0x0020, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0085, 0x0308, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x2060], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0085, 0x200B], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0085, 0x0020, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0085, 0x0308, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x200B], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0085, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0085, 0x0020, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0085, 0x0308, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x1F1E6], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0085, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0085, 0x0020, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0085, 0x0308, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x261D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0085, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0085, 0x0020, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0085, 0x0308, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x1F3FB], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0085, 0x0029], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0085, 0x0028], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0028], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0028], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0028], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0085, 0x0001], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0001], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0001], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0001], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0085, 0x200D], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0085, 0x0020, 0x200D], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0085, 0x0308, 0x200D], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x200D], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0085, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x00A7], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x00A7], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x00A7], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0085, 0x50005], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x50005], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x50005], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x50005], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0085, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0085, 0x0020, 0x0E01], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0E01], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x0E01], ["×","÷","×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0085, 0x3041], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0085, 0x0020, 0x3041], ["×","÷","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0085, 0x0308, 0x3041], ["×","÷","×","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0085, 0x0308, 0x0020, 0x3041], ["×","÷","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x17D6, 0x0023], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x17D6, 0x2014], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x17D6, 0x0009], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x17D6, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x17D6, 0x000B], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x17D6, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x17D6, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x17D6, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x17D6, 0x007D], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x17D6, 0x000D], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x17D6, 0x0021], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x17D6, 0x00A0], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x17D6, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x17D6, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x17D6, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x17D6, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x17D6, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x17D6, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x17D6, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x17D6, 0x002D], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x17D6, 0x231A], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x17D6, 0x2024], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x17D6, 0x002C], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x17D6, 0x1100], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x17D6, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x17D6, 0x1160], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x17D6, 0x000A], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x17D6, 0x0085], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x17D6, 0x17D6], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x17D6, 0x0030], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x17D6, 0x2329], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x17D6, 0x0025], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x17D6, 0x0024], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x17D6, 0x0022], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x17D6, 0x0020], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x17D6, 0x002F], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x17D6, 0x2060], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x17D6, 0x200B], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x17D6, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x17D6, 0x261D], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x17D6, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x17D6, 0x0029], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x17D6, 0x0028], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x17D6, 0x0001], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x17D6, 0x200D], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x17D6, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x17D6, 0x50005], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x17D6, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x17D6, 0x3041], ["×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x17D6, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] KHMER SIGN CAMNUC PII KUUH (NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x17D6, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [23.03] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0030, 0x0023], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.03] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0030, 0x2014], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0030, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0030, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0030, 0x0009], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0030, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0030, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0030, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0030, 0x000B], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0030, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0030, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0030, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0030, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0030, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0030, 0x007D], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0030, 0x000D], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0030, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0030, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0030, 0x0021], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0030, 0x00A0], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0030, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0030, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0030, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0030, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0030, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0030, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [23.03] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0030, 0x05D0], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.03] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0030, 0x002D], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0030, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0030, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0030, 0x231A], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0030, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0030, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0030, 0x2024], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0030, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0030, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.03] COMMA (IS) ÷ [0.3]', () => test([0x0030, 0x002C], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0030, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.03] COMMA (IS) ÷ [0.3]', () => test([0x0030, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0030, 0x1100], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0030, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0030, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0030, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0030, 0x1160], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0030, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0030, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0030, 0x000A], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0030, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0030, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0030, 0x0085], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0030, 0x17D6], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0030, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0030, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.03] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0030, 0x0030], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.03] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0030, 0x2329], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0030, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0030, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.05] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0030, 0x0025], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.05] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.05] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0030, 0x0024], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.05] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0030, 0x0022], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0030, 0x0020], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0030, 0x002F], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0030, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0030, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0030, 0x2060], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0030, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0030, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0030, 0x200B], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0030, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0030, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0030, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0030, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0030, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0030, 0x261D], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0030, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0030, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0030, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0030, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0030, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [25.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0030, 0x0029], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0030, 0x0028], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0030, 0x0001], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0030, 0x200D], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0030, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0030, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [23.03] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0030, 0x00A7], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.03] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [23.03] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0030, 0x50005], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.03] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [23.03] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0030, 0x0E01], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0030, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.03] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0030, 0x3041], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0030, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0030, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0030, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2329, 0x0023], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0023], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x2329, 0x2014], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x2329, 0x0020, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x2329, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x2014], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2329, 0x0009], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0009], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2329, 0x00B4], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2329, 0x0020, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2329, 0x0308, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x00B4], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2329, 0x000B], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2329, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2329, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2329, 0xFFFC], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2329, 0x0020, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2329, 0x0308, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0xFFFC], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2329, 0x007D], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2329, 0x000D], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2329, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2329, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2329, 0x0021], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2329, 0x00A0], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x00A0], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2329, 0xAC00], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2329, 0x0020, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2329, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0xAC00], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2329, 0xAC01], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2329, 0x0020, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2329, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0xAC01], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2329, 0x05D0], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x05D0], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2329, 0x002D], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2329, 0x0020, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2329, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x002D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x2329, 0x231A], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x2329, 0x0020, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x2329, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x231A], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2329, 0x2024], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2329, 0x0020, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2329, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x2024], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2329, 0x002C], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2329, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x2329, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2329, 0x1100], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x1100], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2329, 0x11A8], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2329, 0x0020, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2329, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x11A8], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2329, 0x1160], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2329, 0x0020, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2329, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x1160], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2329, 0x000A], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2329, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2329, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2329, 0x0085], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2329, 0x17D6], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2329, 0x0020, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2329, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x17D6], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2329, 0x0030], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0030], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2329, 0x2329], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2329, 0x0020, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2329, 0x0308, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x2329], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2329, 0x0025], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0025], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2329, 0x0024], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0024], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2329, 0x0022], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0022], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2329, 0x0020], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2329, 0x002F], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2329, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x2329, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2329, 0x2060], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2329, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2329, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2329, 0x200B], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2329, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2329, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2329, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2329, 0x0020, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2329, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2329, 0x261D], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2329, 0x0020, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2329, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x261D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2329, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2329, 0x0020, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2329, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2329, 0x0029], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2329, 0x0028], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0028], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2329, 0x0001], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0001], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2329, 0x200D], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2329, 0x0020, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2329, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x200D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2329, 0x00A7], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x00A7], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2329, 0x50005], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x50005], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2329, 0x0E01], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2329, 0x0020, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x0E01], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2329, 0x3041], ["×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [7.01] SPACE (SP) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2329, 0x0020, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2329, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] LEFT-POINTING ANGLE BRACKET (OP) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2329, 0x0308, 0x0020, 0x3041], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [24.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0025, 0x0023], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0025, 0x2014], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0025, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0025, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0025, 0x0009], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0025, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0025, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0025, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0025, 0x000B], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0025, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0025, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0025, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0025, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0025, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0025, 0x007D], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0025, 0x000D], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0025, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0025, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0025, 0x0021], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0025, 0x00A0], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0025, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0025, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0025, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0025, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0025, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0025, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [24.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0025, 0x05D0], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0025, 0x002D], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0025, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0025, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0025, 0x231A], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0025, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0025, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0025, 0x2024], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0025, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0025, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0025, 0x002C], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0025, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0025, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0025, 0x1100], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0025, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0025, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0025, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0025, 0x1160], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0025, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0025, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0025, 0x000A], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0025, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0025, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0025, 0x0085], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0025, 0x17D6], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0025, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0025, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [25.01] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0025, 0x0030], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.01] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0025, 0x2329], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0025, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0025, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0025, 0x0025], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0025, 0x0024], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0025, 0x0022], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0025, 0x0020], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0025, 0x002F], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0025, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0025, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0025, 0x2060], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0025, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0025, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0025, 0x200B], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0025, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0025, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0025, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0025, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0025, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0025, 0x261D], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0025, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0025, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0025, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0025, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0025, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0025, 0x0029], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0025, 0x0028], ["×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0025, 0x0001], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0025, 0x200D], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0025, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0025, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [24.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0025, 0x00A7], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [24.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0025, 0x50005], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [24.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0025, 0x0E01], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0025, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0025, 0x3041], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0025, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0025, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0025, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [24.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0024, 0x0023], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0024, 0x2014], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0024, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0024, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0024, 0x0009], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0024, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0024, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0024, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0024, 0x000B], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0024, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0024, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0024, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0024, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0024, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0024, 0x007D], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0024, 0x000D], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0024, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0024, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0024, 0x0021], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0024, 0x00A0], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [27.03] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0024, 0xAC00], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0024, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.03] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0024, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [27.03] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0024, 0xAC01], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0024, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.03] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0024, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [24.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0024, 0x05D0], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0024, 0x002D], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0024, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0024, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [23.12] WATCH (ID) ÷ [0.3]', () => test([0x0024, 0x231A], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0024, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.12] WATCH (ID) ÷ [0.3]', () => test([0x0024, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0024, 0x2024], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0024, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0024, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0024, 0x002C], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0024, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0024, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [27.03] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0024, 0x1100], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.03] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [27.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0024, 0x11A8], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0024, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0024, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [27.03] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0024, 0x1160], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0024, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [27.03] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0024, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0024, 0x000A], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0024, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0024, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0024, 0x0085], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0024, 0x17D6], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0024, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0024, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [25.01] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0024, 0x0030], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [25.01] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0024, 0x2329], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0024, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0024, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0024, 0x0025], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0024, 0x0024], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0024, 0x0022], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0024, 0x0020], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0024, 0x002F], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0024, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0024, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0024, 0x2060], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0024, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0024, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0024, 0x200B], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0024, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0024, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0024, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0024, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0024, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [23.12] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0024, 0x261D], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0024, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.12] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0024, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [23.12] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0024, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0024, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.12] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0024, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0024, 0x0029], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0024, 0x0028], ["×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0024, 0x0001], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0024, 0x200D], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0024, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0024, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [24.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0024, 0x00A7], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [24.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0024, 0x50005], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [24.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0024, 0x0E01], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0024, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0024, 0x3041], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0024, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0024, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0024, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0022, 0x0023], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] EM DASH (B2) ÷ [0.3]', () => test([0x0022, 0x2014], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0022, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] EM DASH (B2) ÷ [0.3]', () => test([0x0022, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0022, 0x0009], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0022, 0x00B4], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0022, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0022, 0x0308, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0022, 0x000B], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0022, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0022, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0022, 0xFFFC], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0022, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0022, 0x0308, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0022, 0x007D], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0022, 0x000D], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0022, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0022, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0022, 0x0021], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0022, 0x00A0], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0022, 0xAC00], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0022, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0022, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0022, 0xAC01], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0022, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0022, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0022, 0x05D0], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0022, 0x002D], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0022, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0022, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] WATCH (ID) ÷ [0.3]', () => test([0x0022, 0x231A], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0022, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] WATCH (ID) ÷ [0.3]', () => test([0x0022, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0022, 0x2024], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0022, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0022, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0022, 0x002C], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0022, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0022, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0022, 0x1100], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0022, 0x11A8], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0022, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0022, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0022, 0x1160], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0022, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0022, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0022, 0x000A], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0022, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0022, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0022, 0x0085], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0022, 0x17D6], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0022, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0022, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0022, 0x0030], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [15.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0022, 0x2329], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [15.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0022, 0x0020, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [15.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0022, 0x0308, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [15.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x2329], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0022, 0x0025], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0022, 0x0024], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0022, 0x0022], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0022, 0x0020], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0022, 0x002F], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0022, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0022, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0022, 0x2060], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0022, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0022, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0022, 0x200B], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0022, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0022, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0022, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0022, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0022, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0022, 0x261D], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0022, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0022, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0022, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0022, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0022, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0022, 0x0029], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [15.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0022, 0x0028], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) × [15.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [15.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [15.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0028], ["×","×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0022, 0x0001], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0022, 0x200D], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0022, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0022, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0022, 0x00A7], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0022, 0x50005], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0022, 0x0E01], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0022, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [19.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0022, 0x3041], ["×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0022, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0022, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0022, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0020, 0x0023], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0023], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0023], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0020, 0x2014], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0020, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0020, 0x0308, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x2014], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0020, 0x0009], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0009], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0009], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0020, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0020, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0020, 0x0308, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x00B4], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0020, 0x000B], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0020, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0020, 0x0308, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x000B], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0020, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0020, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0020, 0x0308, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0xFFFC], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0020, 0x007D], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x007D], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0020, 0x000D], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0020, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0020, 0x0308, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x000D], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0020, 0x0021], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0021], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0020, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x00A0], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x00A0], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0020, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0020, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0020, 0x0308, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0xAC00], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0020, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0020, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0020, 0x0308, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0xAC01], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0020, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x05D0], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x05D0], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0020, 0x002D], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0020, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0020, 0x0308, 0x002D], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x002D], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0020, 0x231A], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0020, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0020, 0x0308, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x231A], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0020, 0x2024], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0020, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0020, 0x0308, 0x2024], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x2024], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0020, 0x002C], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0020, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0020, 0x0308, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x002C], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0020, 0x1100], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x1100], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0020, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0020, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0020, 0x0308, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x11A8], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0020, 0x1160], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0020, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0020, 0x0308, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x1160], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0020, 0x000A], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0020, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0020, 0x0308, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x000A], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0020, 0x0085], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0085], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0020, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0020, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0020, 0x0308, 0x17D6], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x17D6], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0020, 0x0030], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0030], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0030], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0020, 0x2329], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0020, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0020, 0x0308, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x2329], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0020, 0x0025], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0025], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0025], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0020, 0x0024], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0024], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0024], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0020, 0x0022], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0022], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0022], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0020, 0x0020], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0020, 0x002F], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0020, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0020, 0x0308, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x002F], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0020, 0x2060], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0020, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0020, 0x0308, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x2060], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0020, 0x200B], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0020, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0020, 0x0308, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x200B], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0020, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0020, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0020, 0x0308, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x1F1E6], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0020, 0x261D], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0020, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0020, 0x0308, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x261D], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0020, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0020, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0020, 0x0308, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x1F3FB], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0020, 0x0029], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0020, 0x0028], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0028], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0028], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0020, 0x0001], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0001], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0001], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0020, 0x200D], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0020, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0020, 0x0308, 0x200D], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x200D], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0020, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x00A7], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x00A7], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0020, 0x50005], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x50005], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x50005], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0020, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0020, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0E01], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x0E01], ["×","÷","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0020, 0x3041], ["×","÷","÷"]));
    it('× [0.3] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0020, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0020, 0x0308, 0x3041], ["×","÷","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0020, 0x0308, 0x0020, 0x3041], ["×","÷","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002F, 0x0023], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x002F, 0x2014], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x002F, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x002F, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002F, 0x0009], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002F, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002F, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002F, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002F, 0x000B], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002F, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002F, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002F, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002F, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002F, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002F, 0x007D], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002F, 0x000D], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002F, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002F, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002F, 0x0021], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002F, 0x00A0], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002F, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002F, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002F, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002F, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002F, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002F, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [21.2] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002F, 0x05D0], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.2] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002F, 0x002D], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002F, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002F, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x002F, 0x231A], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x002F, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x002F, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002F, 0x2024], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002F, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002F, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002F, 0x002C], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002F, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x002F, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002F, 0x1100], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002F, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002F, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002F, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002F, 0x1160], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002F, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002F, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002F, 0x000A], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002F, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002F, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002F, 0x0085], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002F, 0x17D6], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002F, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002F, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002F, 0x0030], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002F, 0x2329], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002F, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002F, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002F, 0x0025], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002F, 0x0024], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002F, 0x0022], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002F, 0x0020], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002F, 0x002F], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002F, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x002F, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002F, 0x2060], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002F, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002F, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002F, 0x200B], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002F, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002F, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002F, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002F, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002F, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002F, 0x261D], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002F, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002F, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002F, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002F, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002F, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002F, 0x0029], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002F, 0x0028], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002F, 0x0001], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002F, 0x200D], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002F, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002F, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002F, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002F, 0x50005], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002F, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002F, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002F, 0x3041], ["×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002F, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002F, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] SOLIDUS (SY) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x002F, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2060, 0x0023], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] EM DASH (B2) ÷ [0.3]', () => test([0x2060, 0x2014], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x2060, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] EM DASH (B2) ÷ [0.3]', () => test([0x2060, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2060, 0x0009], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2060, 0x00B4], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2060, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2060, 0x0308, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2060, 0x000B], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2060, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2060, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2060, 0xFFFC], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2060, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2060, 0x0308, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2060, 0x007D], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2060, 0x000D], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2060, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2060, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2060, 0x0021], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2060, 0x00A0], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2060, 0xAC00], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2060, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2060, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2060, 0xAC01], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2060, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2060, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2060, 0x05D0], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2060, 0x002D], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2060, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2060, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] WATCH (ID) ÷ [0.3]', () => test([0x2060, 0x231A], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x2060, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] WATCH (ID) ÷ [0.3]', () => test([0x2060, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2060, 0x2024], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2060, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2060, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] COMMA (IS) ÷ [0.3]', () => test([0x2060, 0x002C], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2060, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] COMMA (IS) ÷ [0.3]', () => test([0x2060, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2060, 0x1100], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2060, 0x11A8], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2060, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2060, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2060, 0x1160], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2060, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2060, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2060, 0x000A], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2060, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2060, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2060, 0x0085], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2060, 0x17D6], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2060, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2060, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2060, 0x0030], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2060, 0x2329], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2060, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2060, 0x0308, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2060, 0x0025], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2060, 0x0024], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2060, 0x0022], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2060, 0x0020], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2060, 0x002F], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2060, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2060, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2060, 0x2060], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2060, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2060, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2060, 0x200B], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2060, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2060, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2060, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2060, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2060, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2060, 0x261D], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2060, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2060, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2060, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2060, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2060, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2060, 0x0029], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2060, 0x0028], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2060, 0x0001], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2060, 0x200D], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2060, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2060, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2060, 0x00A7], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2060, 0x50005], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2060, 0x0E01], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2060, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2060, 0x3041], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2060, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2060, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2060, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200B, 0x0023], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0023], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0023], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] EM DASH (B2) ÷ [0.3]', () => test([0x200B, 0x2014], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] EM DASH (B2) ÷ [0.3]', () => test([0x200B, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x200B, 0x0308, 0x2014], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x2014], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200B, 0x0009], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0009], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0009], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200B, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200B, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200B, 0x0308, 0x00B4], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x00B4], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200B, 0x000B], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200B, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200B, 0x0308, 0x000B], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x000B], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200B, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200B, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200B, 0x0308, 0xFFFC], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0xFFFC], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200B, 0x007D], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x007D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x007D], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x007D], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200B, 0x000D], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200B, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200B, 0x0308, 0x000D], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x000D], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200B, 0x0021], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0021], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0021], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0021], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200B, 0x00A0], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x00A0], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x00A0], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200B, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200B, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200B, 0x0308, 0xAC00], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0xAC00], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200B, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200B, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200B, 0x0308, 0xAC01], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0xAC01], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200B, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x05D0], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x05D0], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200B, 0x002D], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200B, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200B, 0x0308, 0x002D], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x002D], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] WATCH (ID) ÷ [0.3]', () => test([0x200B, 0x231A], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] WATCH (ID) ÷ [0.3]', () => test([0x200B, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x200B, 0x0308, 0x231A], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x231A], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200B, 0x2024], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200B, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200B, 0x0308, 0x2024], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x2024], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMMA (IS) ÷ [0.3]', () => test([0x200B, 0x002C], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] COMMA (IS) ÷ [0.3]', () => test([0x200B, 0x0020, 0x002C], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x200B, 0x0308, 0x002C], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x002C], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200B, 0x1100], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x1100], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x1100], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200B, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200B, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200B, 0x0308, 0x11A8], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x11A8], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200B, 0x1160], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200B, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200B, 0x0308, 0x1160], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x1160], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200B, 0x000A], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200B, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200B, 0x0308, 0x000A], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x000A], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200B, 0x0085], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0085], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0085], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200B, 0x17D6], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200B, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200B, 0x0308, 0x17D6], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x17D6], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200B, 0x0030], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0030], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0030], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200B, 0x2329], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200B, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200B, 0x0308, 0x2329], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x2329], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200B, 0x0025], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0025], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0025], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200B, 0x0024], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0024], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0024], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200B, 0x0022], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0022], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0022], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200B, 0x0020], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] SOLIDUS (SY) ÷ [0.3]', () => test([0x200B, 0x002F], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] SOLIDUS (SY) ÷ [0.3]', () => test([0x200B, 0x0020, 0x002F], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x200B, 0x0308, 0x002F], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x002F], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200B, 0x2060], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200B, 0x0020, 0x2060], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200B, 0x0308, 0x2060], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x2060], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200B, 0x200B], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200B, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200B, 0x0308, 0x200B], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x200B], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200B, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200B, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200B, 0x0308, 0x1F1E6], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x1F1E6], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200B, 0x261D], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200B, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200B, 0x0308, 0x261D], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x261D], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200B, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200B, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200B, 0x0308, 0x1F3FB], ["×","÷","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x1F3FB], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200B, 0x0029], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0029], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0029], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200B, 0x0028], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0028], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0028], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200B, 0x0001], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0001], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0001], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200B, 0x200D], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200B, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200B, 0x0308, 0x200D], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x200D], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200B, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x00A7], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x00A7], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200B, 0x50005], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x50005], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x50005], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200B, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200B, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0E01], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x0E01], ["×","÷","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200B, 0x3041], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) × [7.01] SPACE (SP) ÷ [8.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200B, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200B, 0x0308, 0x3041], ["×","÷","×","÷"]));
    it('× [0.3] ZERO WIDTH SPACE (ZW) ÷ [8.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200B, 0x0308, 0x0020, 0x3041], ["×","÷","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F1E6, 0x0023], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F1E6, 0x2014], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F1E6, 0x0009], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F1E6, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F1E6, 0x000B], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F1E6, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F1E6, 0x007D], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F1E6, 0x000D], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F1E6, 0x0021], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F1E6, 0x00A0], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F1E6, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F1E6, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F1E6, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F1E6, 0x002D], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1F1E6, 0x231A], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F1E6, 0x2024], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1F1E6, 0x002C], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F1E6, 0x1100], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F1E6, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F1E6, 0x1160], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F1E6, 0x000A], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F1E6, 0x0085], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F1E6, 0x17D6], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F1E6, 0x0030], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F1E6, 0x2329], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F1E6, 0x0025], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F1E6, 0x0024], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F1E6, 0x0022], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F1E6, 0x0020], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F1E6, 0x002F], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F1E6, 0x2060], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F1E6, 0x200B], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [30.11] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F1E6, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.11] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F1E6, 0x261D], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F1E6, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F1E6, 0x0029], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F1E6, 0x0028], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0001], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F1E6, 0x200D], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F1E6, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F1E6, 0x50005], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F1E6, 0x3041], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F1E6, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER A (RI) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F1E6, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x261D, 0x0023], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x261D, 0x2014], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x261D, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x261D, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x261D, 0x0009], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x261D, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x261D, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x261D, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x261D, 0x000B], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x261D, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x261D, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x261D, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x261D, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x261D, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x261D, 0x007D], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x261D, 0x000D], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x261D, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x261D, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x261D, 0x0021], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x261D, 0x00A0], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x261D, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x261D, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x261D, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x261D, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x261D, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x261D, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x261D, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x261D, 0x002D], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x261D, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x261D, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x261D, 0x231A], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x261D, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x261D, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x261D, 0x2024], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x261D, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x261D, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x261D, 0x002C], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x261D, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x261D, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x261D, 0x1100], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x261D, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x261D, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x261D, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x261D, 0x1160], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x261D, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x261D, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x261D, 0x000A], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x261D, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x261D, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x261D, 0x0085], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x261D, 0x17D6], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x261D, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x261D, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x261D, 0x0030], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x261D, 0x2329], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x261D, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x261D, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x261D, 0x0025], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x261D, 0x0024], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x261D, 0x0022], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x261D, 0x0020], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x261D, 0x002F], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x261D, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x261D, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x261D, 0x2060], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x261D, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x261D, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x261D, 0x200B], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x261D, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x261D, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x261D, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x261D, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x261D, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x261D, 0x261D], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x261D, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x261D, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [30.2] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x261D, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x261D, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.2] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x261D, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x261D, 0x0029], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x261D, 0x0028], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x261D, 0x0001], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x261D, 0x200D], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x261D, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x261D, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x261D, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x261D, 0x50005], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x261D, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x261D, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x261D, 0x3041], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x261D, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x261D, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x261D, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F3FB, 0x0023], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F3FB, 0x2014], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F3FB, 0x0009], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F3FB, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F3FB, 0x000B], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F3FB, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F3FB, 0x007D], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F3FB, 0x000D], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F3FB, 0x0021], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F3FB, 0x00A0], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F3FB, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F3FB, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F3FB, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F3FB, 0x002D], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1F3FB, 0x231A], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F3FB, 0x2024], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1F3FB, 0x002C], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F3FB, 0x1100], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F3FB, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F3FB, 0x1160], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F3FB, 0x000A], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F3FB, 0x0085], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F3FB, 0x17D6], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F3FB, 0x0030], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F3FB, 0x2329], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F3FB, 0x0025], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F3FB, 0x0024], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F3FB, 0x0022], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F3FB, 0x0020], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F3FB, 0x002F], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F3FB, 0x2060], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F3FB, 0x200B], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F3FB, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F3FB, 0x261D], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F3FB, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F3FB, 0x0029], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F3FB, 0x0028], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0001], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F3FB, 0x200D], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F3FB, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F3FB, 0x50005], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F3FB, 0x3041], ["×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F3FB, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x1F3FB, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [30.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0029, 0x0023], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.02] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0029, 0x2014], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0029, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0029, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0029, 0x0009], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0029, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0029, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0029, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0029, 0x000B], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0029, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0029, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0029, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0029, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0029, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0029, 0x007D], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0029, 0x000D], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0029, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0029, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0029, 0x0021], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0029, 0x00A0], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0029, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0029, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0029, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0029, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0029, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0029, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [30.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0029, 0x05D0], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.02] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0029, 0x002D], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0029, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0029, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0029, 0x231A], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0029, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0029, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0029, 0x2024], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0029, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0029, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0029, 0x002C], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0029, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0029, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0029, 0x1100], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0029, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0029, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0029, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0029, 0x1160], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0029, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0029, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0029, 0x000A], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0029, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0029, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0029, 0x0085], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0029, 0x17D6], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0029, 0x0020, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0029, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [16.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x17D6], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [30.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0029, 0x0030], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0029, 0x2329], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0029, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0029, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0029, 0x0025], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0029, 0x0024], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0029, 0x0022], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0029, 0x0020], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0029, 0x002F], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0029, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0029, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0029, 0x2060], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0029, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0029, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0029, 0x200B], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0029, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0029, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0029, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0029, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0029, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0029, 0x261D], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0029, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0029, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0029, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0029, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0029, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0029, 0x0029], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0029, 0x0028], ["×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0029, 0x0001], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0029, 0x200D], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0029, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0029, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [30.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0029, 0x00A7], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.02] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [30.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0029, 0x50005], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.02] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [30.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0029, 0x0E01], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0029, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0029, 0x3041], ["×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0029, 0x0020, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0029, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] RIGHT PARENTHESIS (CP_CP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [16.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0029, 0x0308, 0x0020, 0x3041], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0028, 0x0023], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0023], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x0028, 0x2014], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x0028, 0x0020, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x0028, 0x0308, 0x2014], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] EM DASH (B2) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x2014], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0028, 0x0009], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0009], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0028, 0x00B4], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0028, 0x0020, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0028, 0x0308, 0x00B4], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x00B4], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0028, 0x000B], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0028, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0028, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0028, 0xFFFC], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0028, 0x0020, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0028, 0x0308, 0xFFFC], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0xFFFC], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0028, 0x007D], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0028, 0x000D], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0028, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0028, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0028, 0x0021], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0028, 0x00A0], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x00A0], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0028, 0xAC00], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0028, 0x0020, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0028, 0x0308, 0xAC00], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0xAC00], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0028, 0xAC01], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0028, 0x0020, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0028, 0x0308, 0xAC01], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0xAC01], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0028, 0x05D0], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x05D0], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0028, 0x002D], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0028, 0x0020, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0028, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x002D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x0028, 0x231A], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x0028, 0x0020, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x0028, 0x0308, 0x231A], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] WATCH (ID) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x231A], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0028, 0x2024], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0028, 0x0020, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0028, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x2024], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0028, 0x002C], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0028, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0028, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0028, 0x1100], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x1100], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x1100], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0028, 0x11A8], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0028, 0x0020, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0028, 0x0308, 0x11A8], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x11A8], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0028, 0x1160], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0028, 0x0020, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0028, 0x0308, 0x1160], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x1160], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0028, 0x000A], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0028, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0028, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0028, 0x0085], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0028, 0x17D6], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0028, 0x0020, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0028, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x17D6], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0028, 0x0030], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0030], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0028, 0x2329], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0028, 0x0020, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0028, 0x0308, 0x2329], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x2329], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0028, 0x0025], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0025], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0028, 0x0024], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0024], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0028, 0x0022], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0022], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0028, 0x0020], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0028, 0x002F], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0028, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0028, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0028, 0x2060], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0028, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0028, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0028, 0x200B], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0028, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0028, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0028, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0028, 0x0020, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0028, 0x0308, 0x1F1E6], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0028, 0x261D], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0028, 0x0020, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0028, 0x0308, 0x261D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x261D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0028, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0028, 0x0020, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0028, 0x0308, 0x1F3FB], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0028, 0x0029], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0028, 0x0028], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0028], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0028, 0x0001], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0001], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0028, 0x200D], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0028, 0x0020, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0028, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x200D], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0028, 0x00A7], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x00A7], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0028, 0x50005], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x50005], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0028, 0x0E01], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0028, 0x0020, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x0E01], ["×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0028, 0x3041], ["×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0028, 0x0020, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0028, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [14.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0028, 0x0308, 0x0020, 0x3041], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0001, 0x0023], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0001, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0001, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0001, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0001, 0x0009], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0001, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0001, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0001, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0001, 0x000B], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0001, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0001, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0001, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0001, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0001, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [13.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0001, 0x007D], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0001, 0x000D], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0001, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0001, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0001, 0x0021], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [12.3] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0001, 0x00A0], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.3] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0001, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0001, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0001, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0001, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0001, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0001, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0001, 0x05D0], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0001, 0x002D], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0001, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0001, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0001, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0001, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0001, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0001, 0x2024], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0001, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0001, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [13.04] COMMA (IS) ÷ [0.3]', () => test([0x0001, 0x002C], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0001, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.04] COMMA (IS) ÷ [0.3]', () => test([0x0001, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0001, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0001, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0001, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0001, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0001, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0001, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0001, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0001, 0x000A], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0001, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0001, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0001, 0x0085], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0001, 0x17D6], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0001, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0001, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0001, 0x0030], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0001, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0001, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0001, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0001, 0x0025], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0001, 0x0024], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0001, 0x0022], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0001, 0x0020], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [13.04] SOLIDUS (SY) ÷ [0.3]', () => test([0x0001, 0x002F], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0001, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.04] SOLIDUS (SY) ÷ [0.3]', () => test([0x0001, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0001, 0x2060], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0001, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0001, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0001, 0x200B], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0001, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0001, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0001, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0001, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0001, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0001, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0001, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0001, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0001, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0001, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0001, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [13.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0001, 0x0029], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0001, 0x0028], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0001, 0x0001], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0001, 0x200D], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0001, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0001, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0001, 0x00A7], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0001, 0x50005], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0001, 0x0E01], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0001, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0001, 0x3041], ["×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0001, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0001, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] <START OF HEADING> (CM1_CM) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0001, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200D, 0x0023], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] EM DASH (B2) ÷ [0.3]', () => test([0x200D, 0x2014], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x200D, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x200D, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200D, 0x0009], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200D, 0x00B4], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200D, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200D, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200D, 0x000B], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200D, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200D, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200D, 0xFFFC], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200D, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200D, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200D, 0x007D], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [13.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200D, 0x000D], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200D, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200D, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200D, 0x0021], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200D, 0x00A0], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [12.3] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200D, 0xAC00], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200D, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200D, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200D, 0xAC01], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200D, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200D, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200D, 0x05D0], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200D, 0x002D], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200D, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200D, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] WATCH (ID) ÷ [0.3]', () => test([0x200D, 0x231A], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x200D, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x200D, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200D, 0x2024], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200D, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200D, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMMA (IS) ÷ [0.3]', () => test([0x200D, 0x002C], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x200D, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [13.04] COMMA (IS) ÷ [0.3]', () => test([0x200D, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200D, 0x1100], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200D, 0x11A8], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200D, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200D, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200D, 0x1160], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200D, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200D, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200D, 0x000A], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200D, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200D, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200D, 0x0085], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200D, 0x17D6], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200D, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200D, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200D, 0x0030], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200D, 0x2329], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200D, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200D, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200D, 0x0025], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200D, 0x0024], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200D, 0x0022], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200D, 0x0020], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] SOLIDUS (SY) ÷ [0.3]', () => test([0x200D, 0x002F], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x200D, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [13.04] SOLIDUS (SY) ÷ [0.3]', () => test([0x200D, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200D, 0x2060], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200D, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200D, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200D, 0x200B], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200D, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200D, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200D, 0x1F1E6], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200D, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200D, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200D, 0x261D], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200D, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200D, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200D, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200D, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200D, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200D, 0x0029], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [13.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200D, 0x0028], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200D, 0x0001], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200D, 0x200D], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200D, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200D, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200D, 0x00A7], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200D, 0x50005], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200D, 0x0E01], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200D, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200D, 0x3041], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200D, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200D, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x200D, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A7, 0x0023], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A7, 0x2014], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A7, 0x0009], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A7, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A7, 0x000B], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A7, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A7, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A7, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A7, 0x007D], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A7, 0x000D], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A7, 0x0021], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A7, 0x00A0], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A7, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A7, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A7, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A7, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A7, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A7, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A7, 0x05D0], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A7, 0x002D], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x00A7, 0x231A], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A7, 0x2024], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00A7, 0x002C], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A7, 0x1100], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A7, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A7, 0x1160], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A7, 0x000A], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A7, 0x0085], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A7, 0x17D6], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A7, 0x0030], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A7, 0x2329], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A7, 0x0025], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A7, 0x0024], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A7, 0x0022], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A7, 0x0020], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A7, 0x002F], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A7, 0x2060], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A7, 0x200B], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A7, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A7, 0x261D], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A7, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A7, 0x0029], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A7, 0x0028], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A7, 0x0001], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A7, 0x200D], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A7, 0x00A7], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A7, 0x50005], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A7, 0x0E01], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A7, 0x3041], ["×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A7, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] SECTION SIGN (AI_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x00A7, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x50005, 0x0023], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x50005, 0x2014], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x50005, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x50005, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x50005, 0x0009], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x50005, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x50005, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x50005, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x50005, 0x000B], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x50005, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x50005, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x50005, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x50005, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x50005, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x50005, 0x007D], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x50005, 0x000D], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x50005, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x50005, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x50005, 0x0021], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x50005, 0x00A0], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x50005, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x50005, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x50005, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x50005, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x50005, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x50005, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x50005, 0x05D0], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x50005, 0x002D], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x50005, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x50005, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x50005, 0x231A], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x50005, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x50005, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x50005, 0x2024], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x50005, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x50005, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x50005, 0x002C], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x50005, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x50005, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x50005, 0x1100], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x50005, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x50005, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x50005, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x50005, 0x1160], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x50005, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x50005, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x50005, 0x000A], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x50005, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x50005, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x50005, 0x0085], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x50005, 0x17D6], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x50005, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x50005, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x50005, 0x0030], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x50005, 0x2329], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x50005, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x50005, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x50005, 0x0025], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x50005, 0x0024], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x50005, 0x0022], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x50005, 0x0020], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x50005, 0x002F], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x50005, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x50005, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x50005, 0x2060], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x50005, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x50005, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x50005, 0x200B], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x50005, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x50005, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x50005, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x50005, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x50005, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x50005, 0x261D], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x50005, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x50005, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x50005, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x50005, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x50005, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x50005, 0x0029], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x50005, 0x0028], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x50005, 0x0001], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x50005, 0x200D], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x50005, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x50005, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x50005, 0x00A7], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x50005, 0x50005], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x50005, 0x0E01], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x50005, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x50005, 0x3041], ["×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x50005, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x50005, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] <reserved-50005> (XX_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x50005, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0E01, 0x0023], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0023], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0E01, 0x2014], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0E01, 0x0009], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0E01, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0E01, 0x000B], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0E01, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0E01, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0E01, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0E01, 0x007D], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0E01, 0x000D], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0E01, 0x0021], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0E01, 0x00A0], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0E01, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0E01, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0E01, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0E01, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0E01, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0E01, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0E01, 0x05D0], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x05D0], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0E01, 0x002D], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0E01, 0x231A], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0E01, 0x2024], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0E01, 0x002C], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0E01, 0x1100], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0E01, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0E01, 0x1160], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0E01, 0x000A], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0E01, 0x0085], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0E01, 0x17D6], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0E01, 0x0030], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0030], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0E01, 0x2329], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0E01, 0x0025], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0025], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0E01, 0x0024], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [24.03] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0024], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0E01, 0x0022], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0E01, 0x0020], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0E01, 0x002F], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0E01, 0x2060], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0E01, 0x200B], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0E01, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0E01, 0x261D], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0E01, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0E01, 0x0029], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0E01, 0x0028], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0028], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0E01, 0x0001], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0E01, 0x200D], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0E01, 0x00A7], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x00A7], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0E01, 0x50005], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x50005], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0E01, 0x0E01], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [28.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0E01], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0E01, 0x3041], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0E01, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0E01, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x3041, 0x0023], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0023], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NUMBER SIGN (AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0023], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x3041, 0x2014], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x3041, 0x0020, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EM DASH (B2) ÷ [0.3]', () => test([0x3041, 0x0308, 0x2014], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EM DASH (B2) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x2014], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x3041, 0x0009], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0009], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.01] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0009], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <CHARACTER TABULATION> (BA) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0009], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x3041, 0x00B4], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x3041, 0x0020, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x3041, 0x0308, 0x00B4], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ACUTE ACCENT (BB) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x00B4], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x3041, 0x000B], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x3041, 0x0020, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x3041, 0x0308, 0x000B], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE TABULATION> (BK) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x000B], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x3041, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x3041, 0x0020, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x3041, 0x0308, 0xFFFC], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0xFFFC], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x3041, 0x007D], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x007D], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x007D], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x3041, 0x000D], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x3041, 0x0020, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x3041, 0x0308, 0x000D], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <CARRIAGE RETURN (CR)> (CR) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x000D], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x3041, 0x0021], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0021], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0021], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [12.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x3041, 0x00A0], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x00A0], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x00A0], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x3041, 0xAC00], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x3041, 0x0020, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x3041, 0x0308, 0xAC00], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GA (H2) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0xAC00], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x3041, 0xAC01], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x3041, 0x0020, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x3041, 0x0308, 0xAC01], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE GAG (H3) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0xAC01], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x3041, 0x05D0], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x05D0], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x05D0], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x3041, 0x002D], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x3041, 0x0020, 0x002D], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x3041, 0x0308, 0x002D], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x002D], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x3041, 0x231A], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x3041, 0x0020, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WATCH (ID) ÷ [0.3]', () => test([0x3041, 0x0308, 0x231A], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WATCH (ID) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x231A], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x3041, 0x2024], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x3041, 0x0020, 0x2024], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x3041, 0x0308, 0x2024], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x2024], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x3041, 0x002C], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x3041, 0x0020, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] COMMA (IS) ÷ [0.3]', () => test([0x3041, 0x0308, 0x002C], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] COMMA (IS) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x002C], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x3041, 0x1100], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x1100], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL CHOSEONG KIYEOK (JL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x1100], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x3041, 0x11A8], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x3041, 0x0020, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x3041, 0x0308, 0x11A8], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x11A8], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x3041, 0x1160], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x3041, 0x0020, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x3041, 0x0308, 0x1160], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x1160], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x3041, 0x000A], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x3041, 0x0020, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x3041, 0x0308, 0x000A], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <LINE FEED (LF)> (LF) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x000A], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x3041, 0x0085], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0085], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [6.0] <NEXT LINE (NEL)> (NL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0085], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x3041, 0x17D6], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x3041, 0x0020, 0x17D6], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x3041, 0x0308, 0x17D6], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] KHMER SIGN CAMNUC PII KUUH (NS) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x17D6], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x3041, 0x0030], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0030], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0030], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x3041, 0x2329], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x3041, 0x0020, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x3041, 0x0308, 0x2329], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT-POINTING ANGLE BRACKET (OP) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x2329], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x3041, 0x0025], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0025], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0025], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x3041, 0x0024], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0024], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] DOLLAR SIGN (PR) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0024], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x3041, 0x0022], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0022], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0022], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0022], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x3041, 0x0020], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0020], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x3041, 0x002F], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x3041, 0x0020, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] SOLIDUS (SY) ÷ [0.3]', () => test([0x3041, 0x0308, 0x002F], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] SOLIDUS (SY) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x002F], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x3041, 0x2060], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x3041, 0x0020, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x3041, 0x0308, 0x2060], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x2060], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x3041, 0x200B], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x3041, 0x0020, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x3041, 0x0308, 0x200B], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x200B], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x3041, 0x1F1E6], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x3041, 0x0020, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x3041, 0x0308, 0x1F1E6], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x1F1E6], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x3041, 0x261D], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x3041, 0x0020, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x3041, 0x0308, 0x261D], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x261D], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x3041, 0x1F3FB], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x3041, 0x0020, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x3041, 0x0308, 0x1F3FB], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x1F3FB], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x3041, 0x0029], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0029], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0029], ["×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x3041, 0x0028], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0028], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0028], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x3041, 0x0001], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0001], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0001], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <START OF HEADING> (CM1_CM) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0001], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x3041, 0x200D], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x3041, 0x0020, 0x200D], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x3041, 0x0308, 0x200D], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x200D], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x3041, 0x00A7], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x00A7], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] SECTION SIGN (AI_AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x00A7], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x3041, 0x50005], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x50005], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] <reserved-50005> (XX_AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x50005], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x3041, 0x0E01], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x3041, 0x0020, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [999.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0E01], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x0E01], ["×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x3041, 0x3041], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x3041, 0x0020, 0x3041], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [21.03] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x3041, 0x0308, 0x3041], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x3041, 0x0308, 0x0020, 0x3041], ["×","×","×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) × [5.01] <LINE FEED (LF)> (LF) ÷ [5.03] LATIN SMALL LETTER A (AL) × [6.0] <LINE FEED (LF)> (LF) ÷ [5.03] COMBINING DIAERESIS (CM1_CM) ÷ [0.3]', () => test([0x000D, 0x000A, 0x0061, 0x000A, 0x0308], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) ÷ [0.3]', () => test([0x0061, 0x0308], ["×","×","÷"]));
    it('× [0.3] SPACE (SP) ÷ [18.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] ARABIC LETTER NOON (AL) ÷ [0.3]', () => test([0x0020, 0x200D, 0x0646], ["×","÷","×","÷"]));
    it('× [0.3] ARABIC LETTER NOON (AL) × [9.0] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0646, 0x200D, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] <LINE TABULATION> (BK) ÷ [4.0] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000B, 0x3041], ["×","÷","÷"]));
    it('× [0.3] <CARRIAGE RETURN (CR)> (CR) ÷ [5.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x000D, 0x3041], ["×","÷","÷"]));
    it('× [0.3] <NEXT LINE (NEL)> (NL) ÷ [5.04] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x0085, 0x3041], ["×","÷","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x200D, 0x261D], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [11.01] WORD JOINER (WJ) ÷ [0.3]', () => test([0x3041, 0x2060], ["×","×","÷"]));
    it('× [0.3] WORD JOINER (WJ) × [11.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0x2060, 0x3041], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [9.0] COMBINING DIAERESIS (CM1_CM) × [12.2] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x3041, 0x0308, 0x00A0], ["×","×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] NO-BREAK SPACE (GL) ÷ [0.3]', () => test([0x200D, 0x00A0], ["×","×","÷"]));
    it('× [0.3] ZERO WIDTH JOINER (ZWJ_O_ZWJ_CM) × [8.1] SOLIDUS (SY) ÷ [0.3]', () => test([0x200D, 0x002F], ["×","×","÷"]));
    it('× [0.3] EM DASH (B2) × [17.0] EM DASH (B2) ÷ [0.3]', () => test([0x2014, 0x2014], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [20.01] OBJECT REPLACEMENT CHARACTER (CB) ÷ [0.3]', () => test([0x3041, 0xFFFC], ["×","÷","÷"]));
    it('× [0.3] OBJECT REPLACEMENT CHARACTER (CB) ÷ [20.02] HIRAGANA LETTER SMALL A (CJ_NS) ÷ [0.3]', () => test([0xFFFC, 0x3041], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SMALL A (CJ_NS) × [21.02] HYPHEN-MINUS (HY) ÷ [0.3]', () => test([0x3041, 0x002D], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0E01, 0x2024], ["×","×","÷"]));
    it('× [0.3] EXCLAMATION MARK (EX) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0021, 0x2024], ["×","×","÷"]));
    it('× [0.3] ONE DOT LEADER (IN) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x2024, 0x2024], ["×","×","÷"]));
    it('× [0.3] DIGIT ZERO (NU) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x0030, 0x2024], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [23.13] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x261D, 0x0025], ["×","×","÷"]));
    it('× [0.3] THAI CHARACTER KO KAI (SA_AL) × [23.02] DIGIT ZERO (NU) ÷ [0.3]', () => test([0x0E01, 0x0030], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [23.12] WHITE UP POINTING INDEX (EB) ÷ [0.3]', () => test([0x0024, 0x261D], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [24.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0024, 0x0E01], ["×","×","÷"]));
    it('× [0.3] PERCENT SIGN (PO) × [24.02] THAI CHARACTER KO KAI (SA_AL) ÷ [0.3]', () => test([0x0025, 0x0E01], ["×","×","÷"]));
    it('× [0.3] HANGUL CHOSEONG KIYEOK (JL) × [26.01] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1100, 0x1160], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [26.02] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x1160, 0x1160], ["×","×","÷"]));
    it('× [0.3] HANGUL JONGSEONG KIYEOK (JT) × [26.03] HANGUL JONGSEONG KIYEOK (JT) ÷ [0.3]', () => test([0x11A8, 0x11A8], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [22.0] ONE DOT LEADER (IN) ÷ [0.3]', () => test([0x1160, 0x2024], ["×","×","÷"]));
    it('× [0.3] HANGUL JUNGSEONG FILLER (JV) × [27.02] PERCENT SIGN (PO) ÷ [0.3]', () => test([0x1160, 0x0025], ["×","×","÷"]));
    it('× [0.3] DOLLAR SIGN (PR) × [27.03] HANGUL JUNGSEONG FILLER (JV) ÷ [0.3]', () => test([0x0024, 0x1160], ["×","×","÷"]));
    it('× [0.3] WHITE UP POINTING INDEX (EB) × [30.2] EMOJI MODIFIER FITZPATRICK TYPE-1-2 (EM) ÷ [0.3]', () => test([0x261D, 0x1F3FB], ["×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER F (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER L (AL) ÷ [0.3]', () => test([0x0066, 0x0069, 0x006E, 0x0061, 0x006C], ["×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [19.01] APOSTROPHE (QU) × [19.02] LATIN SMALL LETTER T (AL) ÷ [0.3]', () => test([0x0063, 0x0061, 0x006E, 0x0027, 0x0074], ["×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [19.01] RIGHT SINGLE QUOTATION MARK (QU) × [19.02] LATIN SMALL LETTER T (AL) ÷ [0.3]', () => test([0x0063, 0x0061, 0x006E, 0x2019, 0x0074], ["×","×","×","×","×","÷"]));
    it('× [0.3] APOSTROPHE (QU) × [19.02] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [19.01] APOSTROPHE (QU) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER T (AL) ÷ [0.3]', () => test([0x0027, 0x0063, 0x0061, 0x006E, 0x0027, 0x0020, 0x006E, 0x006F, 0x0074], ["×","×","×","×","×","×","÷","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [7.01] SPACE (SP) ÷ [18.0] APOSTROPHE (QU) × [19.02] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER T (AL) × [19.01] APOSTROPHE (QU) ÷ [0.3]', () => test([0x0063, 0x0061, 0x006E, 0x0020, 0x0027, 0x006E, 0x006F, 0x0074, 0x0027], ["×","×","×","×","÷","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER U (AL) × [28.0] LATIN SMALL LETTER G (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0062, 0x0075, 0x0067, 0x0028, 0x0073, 0x0029, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020], ["×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER U (AL) × [28.0] LATIN SMALL LETTER G (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [12.1] NO-BREAK SPACE (GL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0062, 0x0075, 0x0067, 0x0028, 0x0073, 0x0029, 0x00A0, 0x0020, 0x0020, 0x0020, 0x0020, 0x0020], ["×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] FULL STOP (IS) × [13.02] FULL STOP (IS) ÷ [999.0] HIRAGANA LETTER MA (ID) ÷ [999.0] HIRAGANA LETTER SU (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] LATIN CAPITAL LETTER X (AL) × [28.0] LATIN CAPITAL LETTER M (AL) × [28.0] LATIN CAPITAL LETTER L (AL) ÷ [999.0] HIRAGANA LETTER NO (ID) × [13.02] FULL STOP (IS) × [13.02] FULL STOP (IS) ÷ [0.3]', () => test([0x002E, 0x002E, 0x307E, 0x3059, 0x3002, 0x0058, 0x004D, 0x004C, 0x306E, 0x002E, 0x002E], ["×","×","÷","÷","×","÷","×","×","÷","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER Y (AL) ÷ [0.3]', () => test([0x0061, 0x0062, 0x00AD, 0x0062, 0x0079], ["×","×","×","÷","×","÷"]));
    it('× [0.3] HYPHEN-MINUS (HY) × [25.02] DIGIT THREE (NU) ÷ [0.3]', () => test([0x002D, 0x0033], ["×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER E (AL) × [13.02] FULL STOP (IS) × [29.0] LATIN SMALL LETTER G (AL) × [13.02] FULL STOP (IS) ÷ [0.3]', () => test([0x0065, 0x002E, 0x0067, 0x002E], ["×","×","×","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-4E00 (ID) × [13.02] FULL STOP (IS) ÷ [999.0] CJK UNIFIED IDEOGRAPH-4E00 (ID) × [13.02] FULL STOP (IS) ÷ [0.3]', () => test([0x4E00, 0x002E, 0x4E00, 0x002E], ["×","×","÷","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER B (AL) ÷ [0.3]', () => test([0x0061, 0x0020, 0x0020, 0x0062], ["×","×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [7.01] SPACE (SP) × [7.01] SPACE (SP) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [8.0] LATIN SMALL LETTER B (AL) ÷ [0.3]', () => test([0x0061, 0x0020, 0x0020, 0x200B, 0x0062], ["×","×","×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [7.01] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [28.0] LATIN SMALL LETTER B (AL) ÷ [0.3]', () => test([0x0061, 0x0020, 0x0308, 0x0062], ["×","×","÷","×","÷"]));
    it('× [0.3] DIGIT ONE (NU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [23.03] LATIN SMALL LETTER B (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER A (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [21.02] HYPHEN-MINUS (HY) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER B (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0031, 0x0308, 0x0062, 0x0028, 0x0061, 0x0029, 0x002D, 0x0028, 0x0062, 0x0029], ["×","×","×","×","×","×","×","÷","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER V (AL) × [28.0] LATIN SMALL LETTER E (AL) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER K (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] FULL STOP (IS) ÷ [0.3]', () => test([0x0067, 0x0069, 0x0076, 0x0065, 0x0020, 0x0062, 0x006F, 0x006F, 0x006B, 0x0028, 0x0073, 0x0029, 0x002E], ["×","×","×","×","×","÷","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER MA (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] HIRAGANA LETTER SU (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x307E, 0x0028, 0x3059, 0x0029], ["×","÷","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER F (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER D (AL) × [7.01] SPACE (SP) × [13.02] FULL STOP (IS) × [29.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER M (AL) ÷ [0.3]', () => test([0x0066, 0x0069, 0x006E, 0x0064, 0x0020, 0x002E, 0x0063, 0x006F, 0x006D], ["×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER Q (AL) × [28.0] LATIN SMALL LETTER U (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER S (AL) × [7.01] SPACE (SP) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT THREE (NU) × [25.03] DIGIT FIVE (NU) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER S (AL) ÷ [0.3]', () => test([0x0065, 0x0071, 0x0075, 0x0061, 0x006C, 0x0073, 0x0020, 0x002E, 0x0033, 0x0035, 0x0020, 0x0063, 0x0065, 0x006E, 0x0074, 0x0073], ["×","×","×","×","×","×","×","×","÷","×","×","÷","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER H (AL) × [28.0] LATIN SMALL LETTER E (AL) ÷ [0.3]', () => test([0x0028, 0x0073, 0x0029, 0x0068, 0x0065], ["×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER H (AL) × [28.0] LATIN SMALL LETTER E (AL) ÷ [0.3]', () => test([0x007B, 0x0073, 0x007D, 0x0068, 0x0065], ["×","×","×","÷","×","÷"]));
    it('× [0.3] MODIFIER LETTER VERTICAL LINE (BB) × [21.04] LATIN SMALL LETTER S (AL) × [28.0] LATIN CAPITAL LETTER I (AL) × [28.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER SCHWA (AL) × [28.0] LATIN SMALL LETTER B (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER SCHWA (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER L (AL) ÷ [0.3]', () => test([0x02C8, 0x0073, 0x0049, 0x006C, 0x0259, 0x0062, 0x0028, 0x0259, 0x0029, 0x006C], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] MODIFIER LETTER VERTICAL LINE (BB) × [21.04] LATIN SMALL LETTER S (AL) × [28.0] LATIN CAPITAL LETTER I (AL) × [28.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER SCHWA (AL) × [28.0] LATIN SMALL LETTER B (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER SCHWA (AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER L (AL) ÷ [0.3]', () => test([0x02C8, 0x0073, 0x0049, 0x006C, 0x0259, 0x0062, 0x007B, 0x0259, 0x007D, 0x006C], ["×","×","×","×","×","×","×","×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] FULL STOP (IS) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x0028, 0x0073, 0x0029, 0x002E], ["×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] FULL STOP (IS) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x0028, 0x0073, 0x002E, 0x0029], ["×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x0028, 0x0073, 0x0029, 0x0021], ["×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.01] EXCLAMATION MARK (EX) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x0028, 0x0073, 0x0021, 0x0029], ["×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [24.03] REVERSE SOLIDUS (PR) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [24.03] REVERSE SOLIDUS (PR) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x005C, 0x0028, 0x0073, 0x005C, 0x0029], ["×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] LATIN SMALL LETTER S (AL) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x0028, 0x0020, 0x0073, 0x0020, 0x0029], ["×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x007B, 0x0073, 0x007D], ["×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [13.02] FULL STOP (IS) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x007B, 0x0073, 0x007D, 0x002E], ["×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [13.01] EXCLAMATION MARK (EX) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x007B, 0x0073, 0x007D, 0x0021], ["×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [24.03] REVERSE SOLIDUS (PR) ÷ [999.0] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [24.03] REVERSE SOLIDUS (PR) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x005C, 0x007B, 0x0073, 0x005C, 0x007D], ["×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER E (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [7.01] SPACE (SP) × [14.0] LATIN SMALL LETTER S (AL) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0065, 0x007B, 0x0020, 0x0073, 0x0020, 0x007D], ["×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [22.0] HORIZONTAL ELLIPSIS (IN) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x0028, 0x0065, 0x0029, 0x2026, 0x0028, 0x0073, 0x0029], ["×","×","×","×","×","×","×","÷","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [22.0] HORIZONTAL ELLIPSIS (IN) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER S (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x0064, 0x0028, 0x0065, 0x0029, 0x2026, 0x0029, 0x0073], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [22.0] HORIZONTAL ELLIPSIS (IN) ÷ [999.0] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0063, 0x006F, 0x0064, 0x007B, 0x0065, 0x007D, 0x2026, 0x007B, 0x0073, 0x007D], ["×","×","×","×","×","×","×","÷","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER D (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [22.0] HORIZONTAL ELLIPSIS (IN) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER S (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x0064, 0x007B, 0x0065, 0x007D, 0x2026, 0x007D, 0x0073], ["×","×","×","×","×","×","×","×","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [21.02] HYPHEN-MINUS (HY) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x006E, 0x002D, 0x0029, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [21.01] SOFT HYPHEN (BA) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x006E, 0x00AD, 0x0029, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [12.1] NON-BREAKING HYPHEN (GL) × [12.0] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x006E, 0x2011, 0x0029, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [21.02] HYPHEN-MINUS (HY) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x006E, 0x0029, 0x002D, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x006E, 0x0029, 0x00AD, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [12.1] NON-BREAKING HYPHEN (GL) × [12.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x006F, 0x006E, 0x0029, 0x2011, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [21.02] HYPHEN-MINUS (HY) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x006E, 0x002D, 0x007D, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [21.01] SOFT HYPHEN (BA) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x006E, 0x00AD, 0x007D, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [12.1] NON-BREAKING HYPHEN (GL) × [12.0] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x006E, 0x2011, 0x007D, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [21.02] HYPHEN-MINUS (HY) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x006E, 0x007D, 0x002D, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x006E, 0x007D, 0x00AD, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [12.1] NON-BREAKING HYPHEN (GL) × [12.0] LATIN SMALL LETTER L (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x006F, 0x006E, 0x007D, 0x2011, 0x006C, 0x0061, 0x006E, 0x0067], ["×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING ACUTE ACCENT (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING ACUTE ACCENT (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x0072, 0x0065, 0x0301, 0x0028, 0x0065, 0x0301, 0x0029, 0x0028, 0x0065, 0x0029], ["×","×","×","×","×","×","×","×","÷","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING ACUTE ACCENT (CM1_CM) × [30.01] LEFT SQUARE BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [21.01] VERTICAL LINE (BA) ÷ [999.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING ACUTE ACCENT (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT SQUARE BRACKET (CP_CP30) ÷ [0.3]', () => test([0x0063, 0x0072, 0x0065, 0x0301, 0x005B, 0x0065, 0x0072, 0x007C, 0x0065, 0x0301, 0x0028, 0x0065, 0x0029, 0x0028, 0x0073, 0x0029, 0x005D], ["×","×","×","×","×","×","×","×","÷","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING ACUTE ACCENT (CM1_CM) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [21.01] VERTICAL LINE (BA) ÷ [999.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING ACUTE ACCENT (CM1_CM) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x0063, 0x0072, 0x0065, 0x0301, 0x007B, 0x0065, 0x0072, 0x007C, 0x0065, 0x0301, 0x0028, 0x0065, 0x0029, 0x0028, 0x0073, 0x0029, 0x007D], ["×","×","×","×","×","×","×","×","÷","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x0028, 0x0308, 0x0029, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x0028, 0x00AB, 0x0308, 0x00BB, 0x0029, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x0028, 0x00AB, 0x0020, 0x0308, 0x0020, 0x00BB, 0x0029, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","÷","×","÷","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [19.01] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [7.01] SPACE (SP) × [15.0] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [15.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x00AB, 0x0020, 0x0028, 0x0020, 0x0308, 0x0020, 0x0029, 0x0020, 0x00BB, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [19.01] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [12.1] NARROW NO-BREAK SPACE (GL) × [12.0] LEFT PARENTHESIS (OP_OP30) × [7.01] SPACE (SP) × [14.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [12.1] NARROW NO-BREAK SPACE (GL) × [12.0] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [15.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x00AB, 0x202F, 0x0028, 0x0020, 0x0308, 0x0020, 0x0029, 0x202F, 0x00BB, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT CURLY BRACKET (CL) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x007B, 0x0308, 0x007D, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [9.0] COMBINING DIAERESIS (CM1_CM) × [19.01] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x007B, 0x00AB, 0x0308, 0x00BB, 0x007D, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) ÷ [18.0] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x007B, 0x00AB, 0x0020, 0x0308, 0x0020, 0x00BB, 0x007D, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","÷","×","÷","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [19.01] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [7.01] SPACE (SP) × [15.0] LEFT CURLY BRACKET (OP_OP30) × [7.01] SPACE (SP) × [14.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) × [7.01] SPACE (SP) ÷ [18.0] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [15.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x00AB, 0x0020, 0x007B, 0x0020, 0x0308, 0x0020, 0x007D, 0x0020, 0x00BB, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER G (AL) × [28.0] LATIN SMALL LETTER U (AL) × [19.01] LEFT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [12.1] NARROW NO-BREAK SPACE (GL) × [12.0] LEFT CURLY BRACKET (OP_OP30) × [7.01] SPACE (SP) × [14.0] COMBINING DIAERESIS (CM1_CM) × [7.01] SPACE (SP) × [13.02] RIGHT CURLY BRACKET (CL) × [12.1] NARROW NO-BREAK SPACE (GL) × [12.0] RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK (QU) × [15.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [9.0] COMBINING DIAERESIS (CM1_CM) × [13.03] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0061, 0x006D, 0x0062, 0x0069, 0x0067, 0x0075, 0x00AB, 0x202F, 0x007B, 0x0020, 0x0308, 0x0020, 0x007D, 0x202F, 0x00BB, 0x0028, 0x0065, 0x0308, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER Z (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER W (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] NON-BREAKING HYPHEN (GL) × [12.0] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER S (AL) × [28.0] LATIN SMALL LETTER K (AL) × [28.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x007A, 0x0065, 0x0072, 0x0077, 0x006F, 0x006E, 0x006F, 0x00AD, 0x2011, 0x0029, 0x006E, 0x0069, 0x0065, 0x0062, 0x0069, 0x0065, 0x0073, 0x006B, 0x0061], ["×","×","×","×","×","×","×","×","×","×","÷","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER Z (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER W (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [21.01] SOFT HYPHEN (BA) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [12.1] NON-BREAKING HYPHEN (GL) × [12.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER S (AL) × [28.0] LATIN SMALL LETTER K (AL) × [28.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x007A, 0x0065, 0x0072, 0x0077, 0x006F, 0x006E, 0x006F, 0x00AD, 0x0029, 0x2011, 0x006E, 0x0069, 0x0065, 0x0062, 0x0069, 0x0065, 0x0073, 0x006B, 0x0061], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER Z (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER W (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] NON-BREAKING HYPHEN (GL) × [12.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER S (AL) × [28.0] LATIN SMALL LETTER K (AL) × [28.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x0028, 0x0063, 0x007A, 0x0065, 0x0072, 0x0077, 0x006F, 0x006E, 0x006F, 0x0029, 0x00AD, 0x2011, 0x006E, 0x0069, 0x0065, 0x0062, 0x0069, 0x0065, 0x0073, 0x006B, 0x0061], ["×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER Z (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER W (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] NON-BREAKING HYPHEN (GL) × [12.0] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER S (AL) × [28.0] LATIN SMALL LETTER K (AL) × [28.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x007A, 0x0065, 0x0072, 0x0077, 0x006F, 0x006E, 0x006F, 0x00AD, 0x2011, 0x007D, 0x006E, 0x0069, 0x0065, 0x0062, 0x0069, 0x0065, 0x0073, 0x006B, 0x0061], ["×","×","×","×","×","×","×","×","×","×","÷","×","÷","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER Z (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER W (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [21.01] SOFT HYPHEN (BA) × [13.02] RIGHT CURLY BRACKET (CL) × [12.1] NON-BREAKING HYPHEN (GL) × [12.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER S (AL) × [28.0] LATIN SMALL LETTER K (AL) × [28.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x007A, 0x0065, 0x0072, 0x0077, 0x006F, 0x006E, 0x006F, 0x00AD, 0x007D, 0x2011, 0x006E, 0x0069, 0x0065, 0x0062, 0x0069, 0x0065, 0x0073, 0x006B, 0x0061], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER Z (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER W (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER O (AL) × [13.02] RIGHT CURLY BRACKET (CL) × [21.01] SOFT HYPHEN (BA) ÷ [999.0] NON-BREAKING HYPHEN (GL) × [12.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER S (AL) × [28.0] LATIN SMALL LETTER K (AL) × [28.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x007B, 0x0063, 0x007A, 0x0065, 0x0072, 0x0077, 0x006F, 0x006E, 0x006F, 0x007D, 0x00AD, 0x2011, 0x006E, 0x0069, 0x0065, 0x0062, 0x0069, 0x0065, 0x0073, 0x006B, 0x0061], ["×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER P (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER R (AL) × [30.01] LEFT SQUARE BRACKET (OP_OP30) × [13.02] RIGHT SQUARE BRACKET (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] DIGIT ZERO (NU) × [25.04] RIGHT PARENTHESIS (CP_CP30) × [13.02] SEMICOLON (IS) ÷ [0.3]', () => test([0x006F, 0x0070, 0x0065, 0x0072, 0x0061, 0x0074, 0x006F, 0x0072, 0x005B, 0x005D, 0x0028, 0x0030, 0x0029, 0x003B], ["×","×","×","×","×","×","×","×","×","×","÷","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER P (AL) × [28.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER R (AL) × [30.01] LEFT SQUARE BRACKET (OP_OP30) × [13.02] RIGHT SQUARE BRACKET (CP_CP30) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] LEFT CURLY BRACKET (OP_OP30) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x006F, 0x0070, 0x0065, 0x0072, 0x0061, 0x0074, 0x006F, 0x0072, 0x005B, 0x005D, 0x0028, 0x0029, 0x007B, 0x007D], ["×","×","×","×","×","×","×","×","×","×","÷","×","÷","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] HIRAGANA LETTER WO (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x672C, 0x0028, 0x3092, 0x0029, 0x8AAD, 0x3080], ["×","÷","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LEFT CORNER BRACKET (OP) × [14.0] HIRAGANA LETTER WO (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x672C, 0x0028, 0x300C, 0x3092, 0x300D, 0x0029, 0x8AAD, 0x3080], ["×","÷","×","×","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] LEFT PARENTHESIS (OP_OP30) × [14.0] HIRAGANA LETTER WO (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x672C, 0x300C, 0x0028, 0x3092, 0x0029, 0x300D, 0x8AAD, 0x3080], ["×","÷","×","×","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] LEFT CURLY BRACKET (OP_OP30) × [14.0] HIRAGANA LETTER WO (ID) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x672C, 0x007B, 0x3092, 0x007D, 0x8AAD, 0x3080], ["×","÷","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] LEFT CURLY BRACKET (OP_OP30) × [14.0] LEFT CORNER BRACKET (OP) × [14.0] HIRAGANA LETTER WO (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x672C, 0x007B, 0x300C, 0x3092, 0x300D, 0x007D, 0x8AAD, 0x3080], ["×","÷","×","×","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] LEFT SQUARE BRACKET (OP_OP30) × [14.0] LEFT PARENTHESIS (OP_OP30) × [14.0] HIRAGANA LETTER WO (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT SQUARE BRACKET (CP_CP30) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x672C, 0x005B, 0x0028, 0x3092, 0x0029, 0x005D, 0x8AAD, 0x3080], ["×","÷","×","×","×","×","÷","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] KATAKANA LETTER NI (ID) × [21.03] KATAKANA LETTER SMALL YU (CJ_NS) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) × [21.03] KATAKANA MIDDLE DOT (NS) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] KATAKANA LETTER YO (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x0028, 0x30CB, 0x30E5, 0x30FC, 0x30FB, 0x0029, 0x30E8, 0x30FC, 0x30AF], ["×","×","×","×","×","×","÷","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] KATAKANA LETTER NI (ID) × [21.03] KATAKANA LETTER SMALL YU (CJ_NS) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [16.0] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER YO (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x0028, 0x30CB, 0x30E5, 0x30FC, 0x0029, 0x30FB, 0x30E8, 0x30FC, 0x30AF], ["×","×","×","×","×","×","÷","×","÷","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] KATAKANA LETTER NI (ID) × [21.03] KATAKANA LETTER SMALL YU (CJ_NS) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) × [21.03] KATAKANA MIDDLE DOT (NS) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] KATAKANA LETTER YO (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x007B, 0x30CB, 0x30E5, 0x30FC, 0x30FB, 0x007D, 0x30E8, 0x30FC, 0x30AF], ["×","×","×","×","×","×","÷","×","÷","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] KATAKANA LETTER NI (ID) × [21.03] KATAKANA LETTER SMALL YU (CJ_NS) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) × [13.02] RIGHT CURLY BRACKET (CL) × [16.0] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER YO (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x007B, 0x30CB, 0x30E5, 0x30FC, 0x007D, 0x30FB, 0x30E8, 0x30FC, 0x30AF], ["×","×","×","×","×","×","÷","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] MONGOLIAN LETTER TODO TA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) × [28.0] MONGOLIAN LETTER TODO DA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) ÷ [999.0] MONGOLIAN TODO SOFT HYPHEN (BB) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] MONGOLIAN LETTER BA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER CHA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER GA (AL) × [9.0] MONGOLIAN FREE VARIATION SELECTOR TWO (CM1_CM) ÷ [0.3]', () => test([0x0028, 0x1850, 0x1846, 0x1851, 0x1846, 0x1806, 0x0029, 0x182A, 0x1822, 0x1834, 0x1822, 0x182D, 0x180C], ["×","×","×","×","×","÷","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] MONGOLIAN LETTER TODO TA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) × [28.0] MONGOLIAN LETTER TODO DA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] MONGOLIAN TODO SOFT HYPHEN (BB) × [21.04] MONGOLIAN LETTER BA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER CHA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER GA (AL) × [9.0] MONGOLIAN FREE VARIATION SELECTOR TWO (CM1_CM) ÷ [0.3]', () => test([0x0028, 0x1850, 0x1846, 0x1851, 0x1846, 0x0029, 0x1806, 0x182A, 0x1822, 0x1834, 0x1822, 0x182D, 0x180C], ["×","×","×","×","×","×","÷","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] MONGOLIAN LETTER TODO TA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) × [28.0] MONGOLIAN LETTER TODO DA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) ÷ [999.0] MONGOLIAN TODO SOFT HYPHEN (BB) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] MONGOLIAN LETTER BA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER CHA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER GA (AL) × [9.0] MONGOLIAN FREE VARIATION SELECTOR TWO (CM1_CM) ÷ [0.3]', () => test([0x007B, 0x1850, 0x1846, 0x1851, 0x1846, 0x1806, 0x007D, 0x182A, 0x1822, 0x1834, 0x1822, 0x182D, 0x180C], ["×","×","×","×","×","÷","×","÷","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] MONGOLIAN LETTER TODO TA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) × [28.0] MONGOLIAN LETTER TODO DA (AL) × [28.0] MONGOLIAN LETTER TODO O (AL) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] MONGOLIAN TODO SOFT HYPHEN (BB) × [21.04] MONGOLIAN LETTER BA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER CHA (AL) × [28.0] MONGOLIAN LETTER I (AL) × [28.0] MONGOLIAN LETTER GA (AL) × [9.0] MONGOLIAN FREE VARIATION SELECTOR TWO (CM1_CM) ÷ [0.3]', () => test([0x007B, 0x1850, 0x1846, 0x1851, 0x1846, 0x007D, 0x1806, 0x182A, 0x1822, 0x1834, 0x1822, 0x182D, 0x180C], ["×","×","×","×","×","×","÷","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER H (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER P (AL) × [13.02] COLON (IS) × [13.02] SOLIDUS (SY) × [13.02] SOLIDUS (SY) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [30.02] LATIN SMALL LETTER X (AL) × [28.0] LATIN SMALL LETTER N (AL) × [21.02] HYPHEN-MINUS (HY) × [21.02] HYPHEN-MINUS (HY) ÷ [999.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x0028, 0x0068, 0x0074, 0x0074, 0x0070, 0x003A, 0x002F, 0x002F, 0x0029, 0x0078, 0x006E, 0x002D, 0x002D, 0x0061], ["×","×","×","×","×","×","×","×","×","×","×","×","×","÷","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] LATIN SMALL LETTER H (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER T (AL) × [28.0] LATIN SMALL LETTER P (AL) × [13.02] COLON (IS) × [13.02] SOLIDUS (SY) × [13.02] SOLIDUS (SY) × [13.02] RIGHT CURLY BRACKET (CL) ÷ [999.0] LATIN SMALL LETTER X (AL) × [28.0] LATIN SMALL LETTER N (AL) × [21.02] HYPHEN-MINUS (HY) × [21.02] HYPHEN-MINUS (HY) ÷ [999.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x007B, 0x0068, 0x0074, 0x0074, 0x0070, 0x003A, 0x002F, 0x002F, 0x007D, 0x0078, 0x006E, 0x002D, 0x002D, 0x0061], ["×","×","×","×","×","×","×","×","×","÷","×","×","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] DIGIT ZERO (NU) × [25.03] COMMA (IS) × [25.04] DIGIT ONE (NU) × [25.04] RIGHT PARENTHESIS (CP_CP30) × [25.05] PLUS SIGN (PR) × [25.01] LEFT PARENTHESIS (OP_OP30) × [14.0] DIGIT TWO (NU) × [25.03] COMMA (IS) × [25.04] DIGIT THREE (NU) × [25.04] RIGHT PARENTHESIS (CP_CP30) × [30.02] CIRCLED PLUS (AI_AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] MINUS SIGN (PR) × [25.01] DIGIT FOUR (NU) × [25.03] COMMA (IS) × [25.04] DIGIT FIVE (NU) × [25.04] RIGHT PARENTHESIS (CP_CP30) × [30.02] CIRCLED MINUS (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] DIGIT SIX (NU) × [25.03] COMMA (IS) × [25.04] DIGIT SEVEN (NU) × [25.04] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0028, 0x0030, 0x002C, 0x0031, 0x0029, 0x002B, 0x0028, 0x0032, 0x002C, 0x0033, 0x0029, 0x2295, 0x0028, 0x2212, 0x0034, 0x002C, 0x0035, 0x0029, 0x2296, 0x0028, 0x0036, 0x002C, 0x0037, 0x0029], ["×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LEFT CURLY BRACKET (OP_OP30) × [14.0] DIGIT ZERO (NU) × [25.03] COMMA (IS) × [25.04] DIGIT ONE (NU) × [25.04] RIGHT CURLY BRACKET (CL) × [25.05] PLUS SIGN (PR) × [25.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] DIGIT TWO (NU) × [25.03] COMMA (IS) × [25.04] DIGIT THREE (NU) × [25.04] RIGHT CURLY BRACKET (CL) ÷ [999.0] CIRCLED PLUS (AI_AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] MINUS SIGN (PR) × [25.01] DIGIT FOUR (NU) × [25.03] COMMA (IS) × [25.04] DIGIT FIVE (NU) × [25.04] RIGHT CURLY BRACKET (CL) ÷ [999.0] CIRCLED MINUS (AL) × [30.01] LEFT CURLY BRACKET (OP_OP30) × [14.0] DIGIT SIX (NU) × [25.03] COMMA (IS) × [25.04] DIGIT SEVEN (NU) × [25.04] RIGHT CURLY BRACKET (CL) ÷ [0.3]', () => test([0x007B, 0x0030, 0x002C, 0x0031, 0x007D, 0x002B, 0x007B, 0x0032, 0x002C, 0x0033, 0x007D, 0x2295, 0x007B, 0x2212, 0x0034, 0x002C, 0x0035, 0x007D, 0x2296, 0x007B, 0x0036, 0x002C, 0x0037, 0x007D], ["×","×","×","×","×","×","×","×","×","×","×","÷","×","×","×","×","×","×","÷","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) ÷ [0.3]', () => test([0x0061, 0x0062], ["×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0061, 0x0062, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER C (AL) ÷ [0.3]', () => test([0x0061, 0x0062, 0x0020, 0x0063], ["×","×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) ÷ [999.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x0061, 0x307E], ["×","÷","÷"]));
    it('× [0.3] DEVANAGARI LETTER HA (AL) × [9.0] DEVANAGARI VOWEL SIGN I (CM1_CM) × [28.0] DEVANAGARI LETTER NA (AL) × [9.0] DEVANAGARI SIGN VIRAMA (CM1_CM) × [28.0] DEVANAGARI LETTER DA (AL) × [9.0] DEVANAGARI VOWEL SIGN II (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0939, 0x093F, 0x0928, 0x094D, 0x0926, 0x0940, 0x0020], ["×","×","×","×","×","×","×","÷"]));
    it('× [0.3] DEVANAGARI LETTER YA (AL) × [28.0] DEVANAGARI LETTER SA (AL) × [28.0] DEVANAGARI LETTER GA (AL) × [9.0] DEVANAGARI VOWEL SIGN U (CM1_CM) × [28.0] DEVANAGARI LETTER CA (AL) × [9.0] DEVANAGARI VOWEL SIGN I (CM1_CM) × [28.0] DEVANAGARI LETTER TA (AL) × [9.0] DEVANAGARI VOWEL SIGN II (CM1_CM) × [28.0] DEVANAGARI LETTER YA (AL) × [28.0] DEVANAGARI LETTER SA (AL) × [9.0] DEVANAGARI VOWEL SIGN AA (CM1_CM) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x092F, 0x0938, 0x0917, 0x0941, 0x091A, 0x093F, 0x0924, 0x0940, 0x092F, 0x0938, 0x093E, 0x0020], ["×","×","×","×","×","×","×","×","×","×","×","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-5370 (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x5370, 0x672C], ["×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-8AAD (ID) ÷ [999.0] HIRAGANA LETTER MU (ID) ÷ [0.3]', () => test([0x8AAD, 0x3080], ["×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-5165 (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-529B (ID) ÷ [999.0] HIRAGANA LETTER SI (ID) ÷ [999.0] KATAKANA LETTER E (ID) ÷ [0.3]', () => test([0x5165, 0x529B, 0x3057, 0x30A8], ["×","÷","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-4F4D (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8A18 (ID) ÷ [0.3]', () => test([0x4F4D, 0x3002, 0x8A18], ["×","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [0.3]', () => test([0x672C, 0x3002], ["×","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-967A (ID) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER NO (ID) ÷ [0.3]', () => test([0x967A, 0x300D, 0x306E], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SI (ID) × [21.03] HIRAGANA LETTER SMALL YO (CJ_NS) ÷ [999.0] HIRAGANA LETTER U (ID) ÷ [0.3]', () => test([0x3057, 0x3087, 0x3046], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER MA (ID) ÷ [999.0] LATIN SMALL LETTER A (AL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x307E, 0x0061, 0x672C], ["×","÷","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE EOBS (H3) ÷ [999.0] HANGUL SYLLABLE EO (H2) ÷ [999.0] HANGUL SYLLABLE YO (H2) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER R (AL) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE MOS (H3) ÷ [0.3]', () => test([0xC5C6, 0xC5B4, 0xC694, 0x0020, 0x006F, 0x0072, 0x0020, 0xBABB], ["×","÷","÷","×","÷","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER MA (ID) ÷ [999.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x307E, 0x0061, 0x0062, 0x0020], ["×","÷","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER DE (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-4F7F (ID) ÷ [0.3]', () => test([0x3067, 0x4F7F], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SU (ID) ÷ [999.0] HIRAGANA LETTER RU (ID) ÷ [0.3]', () => test([0x3059, 0x308B], ["×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER NO (ID) ÷ [999.0] KATAKANA LETTER PA (ID) ÷ [999.0] KATAKANA LETTER N (ID) ÷ [0.3]', () => test([0x306E, 0x30D1, 0x30F3], ["×","÷","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER U (ID) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] HIRAGANA LETTER E (ID) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] HIRAGANA LETTER O (ID) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [0.3]', () => test([0x3046, 0x3000, 0x3048, 0x3000, 0x304A, 0x300D], ["×","×","÷","×","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER RU (ID) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE EUN (H3) ÷ [999.0] HANGUL SYLLABLE YEONG (H3) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER NI (ID) ÷ [0.3]', () => test([0x308B, 0x0020, 0xC740, 0xC601, 0x0020, 0x306B], ["×","×","÷","÷","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SI (ID) × [21.03] HIRAGANA LETTER SMALL YO (CJ_NS) ÷ [999.0] HIRAGANA LETTER U (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [0.3]', () => test([0x3057, 0x3087, 0x3046, 0x3002], ["×","×","÷","×","÷"]));
    it('× [0.3] KATAKANA LETTER MU (ID) ÷ [999.0] HIRAGANA LETTER NO (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-4E00 (ID) ÷ [0.3]', () => test([0x30E0, 0x306E, 0x4E00], ["×","÷","÷","÷"]));
    it('× [0.3] KATAKANA LETTER HU (ID) ÷ [999.0] KATAKANA LETTER RI (ID) ÷ [0.3]', () => test([0x30D5, 0x30EA], ["×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER HU (ID) ÷ [999.0] KATAKANA LETTER RI (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] CJK UNIFIED IDEOGRAPH-767E (ID) ÷ [0.3]', () => test([0x30D5, 0x30EA, 0x30FC, 0x767E], ["×","÷","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER PI (ID) × [21.03] KATAKANA LETTER SMALL YU (CJ_NS) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER TA (ID) ÷ [999.0] HIRAGANA LETTER DE (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-4F7F (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-7528 (ID) ÷ [999.0] HIRAGANA LETTER SU (ID) ÷ [999.0] HIRAGANA LETTER RU (ID) ÷ [0.3]', () => test([0x30D4, 0x30E5, 0x30FC, 0x30BF, 0x3067, 0x4F7F, 0x7528, 0x3059, 0x308B], ["×","×","×","÷","÷","÷","÷","÷","÷","÷"]));
    it('× [0.3] KATAKANA LETTER TA (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KI (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] HIRAGANA LETTER WO (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-62BC (ID) ÷ [0.3]', () => test([0x30BF, 0x30FC, 0x30AD, 0x30FC, 0x3092, 0x62BC], ["×","×","÷","×","÷","÷","÷"]));
    it('× [0.3] KATAKANA LETTER SI (ID) × [21.03] KATAKANA LETTER SMALL YO (CJ_NS) ÷ [999.0] KATAKANA LETTER N (ID) ÷ [0.3]', () => test([0x30B7, 0x30E7, 0x30F3], ["×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x0020], ["×","×","÷","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [7.01] SPACE (SP) ÷ [18.0] DEVANAGARI LETTER KA (AL) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x0020, 0x0915], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [7.01] SPACE (SP) ÷ [18.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x0020, 0x672C], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x3000, 0x672C], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x3000, 0x307E], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] DIGIT THREE (NU) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x3000, 0x0033], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [13.02] FULL STOP (IS) × [7.01] SPACE (SP) ÷ [18.0] DIGIT TWO (NU) ÷ [0.3]', () => test([0x0061, 0x0062, 0x002E, 0x0020, 0x0032], ["×","×","×","×","÷","÷"]));
    it('× [0.3] LATIN CAPITAL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT ONE (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE MOS (H3) ÷ [0.3]', () => test([0x0041, 0x002E, 0x0031, 0x0020, 0xBABB], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE BWASS (H3) ÷ [999.0] HANGUL SYLLABLE EO (H2) × [13.02] FULL STOP (IS) × [7.01] SPACE (SP) ÷ [18.0] LATIN CAPITAL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE BOL (H3) ÷ [0.3]', () => test([0xBD24, 0xC5B4, 0x002E, 0x0020, 0x0041, 0x002E, 0x0032, 0x0020, 0xBCFC], ["×","÷","×","×","÷","×","÷","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE BWA (H2) ÷ [999.0] HANGUL SYLLABLE YO (H2) × [13.02] FULL STOP (IS) × [7.01] SPACE (SP) ÷ [18.0] LATIN CAPITAL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT THREE (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE MOS (H3) ÷ [0.3]', () => test([0xBD10, 0xC694, 0x002E, 0x0020, 0x0041, 0x002E, 0x0033, 0x0020, 0xBABB], ["×","÷","×","×","÷","×","÷","×","÷","÷"]));
    it('× [0.3] HANGUL SYLLABLE YO (H2) × [13.02] FULL STOP (IS) × [7.01] SPACE (SP) ÷ [18.0] LATIN CAPITAL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT FOUR (NU) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE MOS (H3) ÷ [0.3]', () => test([0xC694, 0x002E, 0x0020, 0x0041, 0x002E, 0x0034, 0x0020, 0xBABB], ["×","×","×","÷","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULL STOP (IS) ÷ [999.0] DIGIT TWO (NU) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] LEFT CORNER BRACKET (OP) ÷ [0.3]', () => test([0x0061, 0x002E, 0x0032, 0x3000, 0x300C], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER NI (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] KATAKANA LETTER BA (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER B (AL) × [28.0] LATIN SMALL LETTER A (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER YA (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] KATAKANA LETTER SU (ID) ÷ [0.3]', () => test([0x306B, 0x300C, 0x30D0, 0x0028, 0x0062, 0x0061, 0x0029, 0x300D, 0x3084, 0x300C, 0x30B9], ["×","÷","×","÷","×","×","×","×","÷","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER RU (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] LATIN CAPITAL LETTER U (AL) × [28.0] LATIN CAPITAL LETTER K (AL) ÷ [999.0] KATAKANA LETTER PO (ID) ÷ [999.0] KATAKANA LETTER N (ID) ÷ [999.0] KATAKANA LETTER DO (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] KATAKANA LETTER E (ID) ÷ [0.3]', () => test([0x308B, 0x300C, 0x0055, 0x004B, 0x30DD, 0x30F3, 0x30C9, 0x300D, 0xFF09, 0x3001, 0x30A8], ["×","÷","×","×","÷","÷","÷","×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER HA (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] EQUALS SIGN (AL) × [28.0] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER N (AL) × [28.0] LATIN SMALL LETTER D (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x306F, 0x3001, 0x300C, 0x003D, 0x0072, 0x0061, 0x006E, 0x0064, 0x0028, 0x0029, 0x300D, 0x3068], ["×","×","÷","×","×","×","×","×","×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER DE (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] LEFT CORNER BRACKET (OP) × [13.01] EXCLAMATION MARK (EX) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x3067, 0x3001, 0x300C, 0x0021, 0x300D, 0x3068], ["×","×","÷","×","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-8A33 (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] HIRAGANA LETTER SU (ID) ÷ [0.3]', () => test([0x8A33, 0x300C, 0x3059], ["×","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER TE (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] HANGUL SYLLABLE BWASS (H3) ÷ [999.0] HANGUL SYLLABLE EO (H2) × [13.01] QUESTION MARK (EX) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x3066, 0x300C, 0xBD24, 0xC5B4, 0x003F, 0x300D, 0x3068], ["×","÷","×","÷","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER NO (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] HIRAGANA LETTER SO (ID) ÷ [0.3]', () => test([0x306E, 0x300C, 0x305D], ["×","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER HA (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] KATAKANA LETTER E (ID) ÷ [0.3]', () => test([0x306F, 0x300C, 0x30A8], ["×","÷","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-4F8B (ID) × [21.03] FULLWIDTH COLON (NS) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] HIRAGANA LETTER A (ID) × [21.01] IDEOGRAPHIC SPACE (BA) ÷ [999.0] HIRAGANA LETTER I (ID) ÷ [0.3]', () => test([0x4F8B, 0xFF1A, 0x300C, 0x3042, 0x3000, 0x3044], ["×","×","÷","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER KU (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] HANGUL SYLLABLE PYEONG (H3) ÷ [999.0] HANGUL SYLLABLE YANG (H3) ÷ [999.0] HANGUL SYLLABLE EUN (H3) ÷ [0.3]', () => test([0x304F, 0x3001, 0x300C, 0xD3C9, 0xC591, 0xC740], ["×","×","÷","×","÷","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER NI (ID) ÷ [999.0] LEFT CORNER BRACKET (OP) × [14.0] HANGUL SYLLABLE JE (H2) ÷ [999.0] HANGUL SYLLABLE MOG (H3) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] CJK UNIFIED IDEOGRAPH-984C (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-540D (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL SYLLABLE EUN (H3) ÷ [0.3]', () => test([0x306B, 0x300C, 0xC81C, 0xBAA9, 0x0028, 0x984C, 0x540D, 0x0029, 0xC740], ["×","÷","×","÷","÷","×","÷","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-5178 (ID) ÷ [999.0] LEFT WHITE CORNER BRACKET (OP) × [14.0] KATAKANA LETTER U (ID) × [21.03] KATAKANA LETTER SMALL I (CJ_NS) ÷ [999.0] KATAKANA LETTER KI (ID) ÷ [0.3]', () => test([0x5178, 0x300E, 0x30A6, 0x30A3, 0x30AD], ["×","÷","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER DE (ID) ÷ [999.0] LEFT WHITE CORNER BRACKET (OP) × [14.0] CJK UNIFIED IDEOGRAPH-82F1 (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-8A9E (ID) ÷ [0.3]', () => test([0x3067, 0x300E, 0x82F1, 0x8A9E], ["×","÷","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x0028, 0x0073, 0x0029, 0x0020, 0x672C], ["×","×","×","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x0028, 0x0073, 0x0029, 0x0020, 0x307E], ["×","×","×","×","÷","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x0028, 0x0073, 0x0029, 0x0020, 0x30AF], ["×","×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER RU (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER G (AL) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] CJK UNIFIED IDEOGRAPH-72AC (ID) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) ÷ [999.0] HIRAGANA LETTER WO (ID) ÷ [0.3]', () => test([0x308B, 0x3002, 0x0064, 0x006F, 0x0067, 0xFF08, 0x72AC, 0xFF09, 0x3092], ["×","×","÷","×","×","÷","×","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x672C, 0xFF08, 0x307E], ["×","÷","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x672C, 0x0020, 0x0028, 0x0061], ["×","×","÷","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-70B9 (ID) × [7.01] SPACE (SP) ÷ [18.0] LEFT SQUARE BRACKET (OP_OP30) × [14.0] CJK UNIFIED IDEOGRAPH-7DE8 (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-96C6 (ID) × [13.02] RIGHT SQUARE BRACKET (CP_CP30) ÷ [0.3]', () => test([0x70B9, 0x0020, 0x005B, 0x7DE8, 0x96C6, 0x005D], ["×","×","÷","×","÷","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [30.01] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x0061, 0x0028, 0x0073, 0x0029, 0x0020], ["×","×","×","×","×","÷"]));
    it('× [0.3] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] KATAKANA LETTER ZA (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [999.0] KATAKANA LETTER I (ID) × [21.03] KATAKANA LETTER SMALL TU (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER BU (ID) ÷ [0.3]', () => test([0xFF08, 0x30B6, 0x30FB, 0x30AF, 0x30A4, 0x30C3, 0x30AF, 0x30FB, 0x30D6], ["×","×","×","÷","÷","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER P (AL) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] KATAKANA LETTER KU (ID) ÷ [999.0] KATAKANA LETTER I (ID) × [21.03] KATAKANA LETTER SMALL TU (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER BU (ID) ÷ [0.3]', () => test([0x0070, 0xFF08, 0x30AF, 0x30A4, 0x30C3, 0x30AF, 0x30FB, 0x30D6], ["×","÷","×","÷","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x0061, 0x0062, 0xFF08, 0x30AF], ["×","×","÷","×","÷"]));
    it('× [0.3] LEFT PARENTHESIS (OP_OP30) × [14.0] CJK UNIFIED IDEOGRAPH-5370 (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-672C (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [0.3]', () => test([0x0028, 0x5370, 0x672C, 0x0029], ["×","×","÷","×","÷"]));
    it('× [0.3] KATAKANA LETTER SU (ID) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] HIRAGANA LETTER I (ID) ÷ [0.3]', () => test([0x30B9, 0xFF08, 0x3044], ["×","÷","×","÷"]));
    it('× [0.3] KATAKANA LETTER DO (ID) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] KATAKANA LETTER PO (ID) ÷ [0.3]', () => test([0x30C9, 0xFF08, 0x30DD], ["×","÷","×","÷"]));
    it('× [0.3] KATAKANA LETTER DO (ID) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) × [14.0] CJK UNIFIED IDEOGRAPH-8CEA (ID) ÷ [0.3]', () => test([0x30C9, 0x0020, 0x0028, 0x8CEA], ["×","×","÷","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER S (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x0073, 0x0029, 0x300D, 0x307E], ["×","×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) × [13.02] RIGHT WHITE CORNER BRACKET (CL) ÷ [0.3]', () => test([0x0061, 0xFF09, 0x300F], ["×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER RU (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) ÷ [999.0] HIRAGANA LETTER HA (ID) ÷ [0.3]', () => test([0x308B, 0x300D, 0xFF09, 0x306F], ["×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER DO (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] KATAKANA LETTER E (ID) ÷ [0.3]', () => test([0x30C9, 0x300D, 0xFF09, 0x3001, 0x30A8], ["×","×","×","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER R (AL) × [28.0] LATIN SMALL LETTER K (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER MO (ID) ÷ [0.3]', () => test([0x0072, 0x006B, 0x0029, 0x300D, 0x3082], ["×","×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER KU (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [7.01] SPACE (SP) ÷ [18.0] LATIN SMALL LETTER C (AL) × [28.0] LATIN SMALL LETTER D (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER MO (ID) ÷ [0.3]', () => test([0x30AF, 0x0028, 0x0061, 0x0062, 0x0020, 0x0063, 0x0064, 0x0029, 0x300D, 0x3082], ["×","÷","×","×","×","÷","×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER N (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER MA (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER E (AL) × [28.0] LATIN SMALL LETTER X (AL) ÷ [0.3]', () => test([0x30F3, 0x30FB, 0x30DE, 0x30FC, 0x30AF, 0x0028, 0x0065, 0x0078], ["×","×","÷","×","÷","÷","×","×","÷"]));
    it('× [0.3] KATAKANA LETTER MA (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER M (AL) × [28.0] LATIN SMALL LETTER A (AL) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER NA (ID) ÷ [0.3]', () => test([0x30DE, 0x30FC, 0x0028, 0x006D, 0x0061, 0x0029, 0x300D, 0x306A], ["×","×","÷","×","×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER GA (ID) ÷ [999.0] KATAKANA LETTER WA (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] HIRAGANA LETTER KO (ID) ÷ [0.3]', () => test([0x30AC, 0x30EF, 0x300D, 0x3002, 0x3053], ["×","÷","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER KU (ID) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x30AF, 0x300D, 0x307E], ["×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER WA (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] HIRAGANA LETTER KO (ID) ÷ [0.3]', () => test([0x30EF, 0x300D, 0x3002, 0x3053], ["×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER KU (ID) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER MA (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x30AF, 0x300D, 0x307E, 0x3001, 0x672C], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER KU (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x30AF, 0x300D, 0x3001, 0x30AF], ["×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER DE (ID) × [21.03] KATAKANA LETTER SMALL I (CJ_NS) ÷ [999.0] KATAKANA LETTER A (ID) ÷ [999.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) × [13.02] RIGHT WHITE CORNER BRACKET (CL) ÷ [0.3]', () => test([0x30C7, 0x30A3, 0x30A2, 0xFF08, 0x0061, 0x0062, 0xFF09, 0x300F], ["×","×","÷","÷","×","×","×","×","÷"]));
    it('× [0.3] HANGUL SYLLABLE JJOG (H3) ÷ [999.0] HANGUL SYLLABLE I (H2) ÷ [999.0] HANGUL SYLLABLE E (H2) ÷ [999.0] HANGUL SYLLABLE YO (H2) × [13.01] QUESTION MARK (EX) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-805E (ID) ÷ [0.3]', () => test([0xCABD, 0xC774, 0xC5D0, 0xC694, 0x003F, 0x300D, 0x3068, 0x805E], ["×","÷","÷","÷","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-540D (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HANGUL SYLLABLE EUN (H3) × [7.01] SPACE (SP) ÷ [18.0] HANGUL SYLLABLE AL (H3) ÷ [999.0] HANGUL SYLLABLE A (H2) ÷ [999.0] HANGUL SYLLABLE YO (H2) × [13.01] QUESTION MARK (EX) × [13.02] RIGHT CORNER BRACKET (CL) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x540D, 0x0029, 0xC740, 0x0020, 0xC54C, 0xC544, 0xC694, 0x003F, 0x300D, 0x3068], ["×","×","÷","×","÷","÷","÷","×","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-8CA8 (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) ÷ [18.0] HYPHEN-MINUS (HY) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER P (AL) × [28.0] LATIN SMALL LETTER O (AL) ÷ [0.3]', () => test([0x8CA8, 0x0029, 0x0020, 0x002D, 0x0020, 0x0028, 0x0070, 0x006F], ["×","×","×","÷","×","÷","×","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-91CF (ID) × [13.02] RIGHT PARENTHESIS (CP_CP30) × [7.01] SPACE (SP) × [16.0] WAVE DASH (NS) × [7.01] SPACE (SP) ÷ [18.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER P (AL) × [28.0] LATIN SMALL LETTER O (AL) ÷ [0.3]', () => test([0x91CF, 0x0029, 0x0020, 0x301C, 0x0020, 0x0028, 0x0070, 0x006F], ["×","×","×","×","×","÷","×","×","÷"]));
    it('× [0.3] KATAKANA LETTER DO (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-91CD (ID) × [13.02] FULLWIDTH RIGHT PARENTHESIS (CL) × [7.01] SPACE (SP) × [16.0] WAVE DASH (NS) × [7.01] SPACE (SP) ÷ [18.0] CJK UNIFIED IDEOGRAPH-529B (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] CJK UNIFIED IDEOGRAPH-91CD (ID) ÷ [0.3]', () => test([0x30C9, 0x91CD, 0xFF09, 0x0020, 0x301C, 0x0020, 0x529B, 0x30FB, 0x91CD], ["×","÷","×","×","×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [19.01] QUOTATION MARK (QU) × [15.0] FULLWIDTH LEFT PARENTHESIS (OP) × [14.0] HIRAGANA LETTER MA (ID) ÷ [0.3]', () => test([0x0061, 0x0062, 0x0022, 0xFF08, 0x307E], ["×","×","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER HA (ID) × [7.01] SPACE (SP) ÷ [18.0] QUOTATION MARK (QU) × [19.02] LATIN SMALL LETTER S (AL) × [19.01] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x306F, 0x0020, 0x0022, 0x0073, 0x0022, 0x0020], ["×","×","÷","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER HA (ID) × [13.02] IDEOGRAPHIC COMMA (CL) × [19.01] QUOTATION MARK (QU) × [19.02] LATIN CAPITAL LETTER T (AL) × [28.0] LATIN SMALL LETTER H (AL) × [28.0] LATIN SMALL LETTER E (AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x306F, 0x3001, 0x0022, 0x0054, 0x0068, 0x0065, 0x0020], ["×","×","×","×","×","×","×","÷"]));
    it('× [0.3] LATIN SMALL LETTER D (AL) × [28.0] LATIN SMALL LETTER O (AL) × [28.0] LATIN SMALL LETTER G (AL) × [19.01] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER WO (ID) ÷ [0.3]', () => test([0x0064, 0x006F, 0x0067, 0x0022, 0x0020, 0x3092], ["×","×","×","×","×","÷","÷"]));
    it('× [0.3] DIGIT NINE (NU) × [25.03] DIGIT ZERO (NU) × [19.01] QUOTATION MARK (QU) × [7.01] SPACE (SP) ÷ [18.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x0039, 0x0030, 0x0022, 0x0020, 0x3068], ["×","×","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER SU (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER O (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER BA (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER ZA (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER RE (ID) ÷ [0.3]', () => test([0x30B9, 0x30FB, 0x30AA, 0x30FC, 0x30D0, 0x30FC, 0x30FB, 0x30B6, 0x30FB, 0x30EC], ["×","×","÷","×","÷","×","×","÷","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER SU (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER ZI (ID) × [21.03] KATAKANA LETTER SMALL YA (CJ_NS) ÷ [999.0] KATAKANA LETTER N (ID) ÷ [0.3]', () => test([0x30B9, 0x30FB, 0x30B8, 0x30E3, 0x30F3], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER N (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER HU (ID) × [21.03] KATAKANA LETTER SMALL O (CJ_NS) × [21.03] KATAKANA LETTER SMALL TU (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x30F3, 0x30FB, 0x30D5, 0x30A9, 0x30C3, 0x30AF], ["×","×","÷","×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER I (ID) ÷ [999.0] KATAKANA LETTER ZI (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER DO (ID) × [21.03] KATAKANA LETTER SMALL TU (CJ_NS) ÷ [999.0] KATAKANA LETTER GU (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-548C (ID) ÷ [0.3]', () => test([0x30A4, 0x30B8, 0x30FC, 0x30FB, 0x30C9, 0x30C3, 0x30B0, 0x3001, 0x548C], ["×","÷","×","×","÷","×","÷","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER ME (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER SI (ID) × [21.03] KATAKANA LETTER SMALL YO (CJ_NS) ÷ [999.0] KATAKANA LETTER N (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER MA (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x30E1, 0x30FC, 0x30B7, 0x30E7, 0x30F3, 0x30FB, 0x30DE, 0x30FC, 0x30AF], ["×","×","÷","×","÷","×","÷","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER N (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER KU (ID) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [14.0] LATIN SMALL LETTER A (AL) ÷ [0.3]', () => test([0x30F3, 0x30FB, 0x30AF, 0x0028, 0x0061], ["×","×","÷","÷","×","÷"]));
    it('× [0.3] KATAKANA LETTER SI (ID) × [21.03] KATAKANA LETTER SMALL YO (CJ_NS) ÷ [999.0] KATAKANA LETTER N (ID) × [21.03] KATAKANA MIDDLE DOT (NS) ÷ [999.0] KATAKANA LETTER MA (ID) ÷ [0.3]', () => test([0x30B7, 0x30E7, 0x30F3, 0x30FB, 0x30DE], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) × [13.02] COLON (IS) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x672C, 0x003A, 0x0020], ["×","×","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-672C (ID) × [13.02] COLON (IS) × [7.01] SPACE (SP) ÷ [18.0] KATAKANA LETTER KU (ID) ÷ [0.3]', () => test([0x672C, 0x003A, 0x0020, 0x30AF], ["×","×","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-51FA (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-5178 (ID) × [13.02] COLON (IS) × [7.01] SPACE (SP) ÷ [18.0] KATAKANA LETTER HU (ID) ÷ [999.0] KATAKANA LETTER RI (ID) × [21.03] KATAKANA-HIRAGANA PROLONGED SOUND MARK (CJ_NS) ÷ [999.0] CJK UNIFIED IDEOGRAPH-767E (ID) ÷ [0.3]', () => test([0x51FA, 0x5178, 0x003A, 0x0020, 0x30D5, 0x30EA, 0x30FC, 0x767E], ["×","÷","×","×","÷","÷","×","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-5F8C (ID) × [22.0] HORIZONTAL ELLIPSIS (IN) ÷ [999.0] HIRAGANA LETTER NI (ID) ÷ [0.3]', () => test([0x5F8C, 0x2026, 0x306B], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SI (ID) × [21.03] HIRAGANA LETTER SMALL YO (CJ_NS) ÷ [999.0] HIRAGANA LETTER U (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) × [13.02] IDEOGRAPHIC FULL STOP (CL) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [0.3]', () => test([0x3057, 0x3087, 0x3046, 0x3002, 0x3002, 0x3002], ["×","×","÷","×","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER KI (ID) × [13.02] IDEOGRAPHIC COMMA (CL) × [13.01] EXCLAMATION MARK (EX) × [13.01] EXCLAMATION MARK (EX) × [13.02] IDEOGRAPHIC COMMA (CL) × [13.01] EXCLAMATION MARK (EX) × [13.01] EXCLAMATION MARK (EX) × [13.01] EXCLAMATION MARK (EX) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x304D, 0x3001, 0x0021, 0x0021, 0x3001, 0x0021, 0x0021, 0x0021, 0x3068], ["×","×","×","×","×","×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER HA (ID) × [13.02] IDEOGRAPHIC COMMA (CL) × [13.01] QUESTION MARK (EX) ÷ [999.0] HIRAGANA LETTER TO (ID) × [13.01] EXCLAMATION MARK (EX) ÷ [999.0] HIRAGANA LETTER WO (ID) ÷ [0.3]', () => test([0x306F, 0x3001, 0x003F, 0x3068, 0x0021, 0x3092], ["×","×","×","÷","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER TA (ID) × [13.02] IDEOGRAPHIC COMMA (CL) × [16.0] EXCLAMATION QUESTION MARK (NS) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [13.01] EXCLAMATION MARK (EX) × [13.01] QUESTION MARK (EX) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HIRAGANA LETTER NO (ID) ÷ [0.3]', () => test([0x305F, 0x3001, 0x2049, 0x0028, 0x0021, 0x003F, 0x0029, 0x306E], ["×","×","×","÷","×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER YA (ID) × [13.02] IDEOGRAPHIC COMMA (CL) × [16.0] QUESTION EXCLAMATION MARK (NS) ÷ [999.0] LEFT PARENTHESIS (OP_OP30) × [13.01] QUESTION MARK (EX) × [13.01] EXCLAMATION MARK (EX) × [13.02] RIGHT PARENTHESIS (CP_CP30) ÷ [999.0] HIRAGANA LETTER NO (ID) ÷ [0.3]', () => test([0x3084, 0x3001, 0x2048, 0x0028, 0x003F, 0x0021, 0x0029, 0x306E], ["×","×","×","÷","×","×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER TA (ID) × [7.01] SPACE (SP) ÷ [18.0] INTERROBANG (NS) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x305F, 0x0020, 0x203D, 0x3068], ["×","×","÷","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER SE (ID) × [13.01] FULLWIDTH EXCLAMATION MARK (EX) ÷ [999.0] DIGIT ONE (NU) × [25.03] DIGIT ZERO (NU) × [25.03] DIGIT ZERO (NU) × [25.05] PERCENT SIGN (PO) ÷ [999.0] HIRAGANA LETTER NO (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-5B8C (ID) ÷ [0.3]', () => test([0x305B, 0xFF01, 0x0031, 0x0030, 0x0030, 0x0025, 0x306E, 0x5B8C], ["×","×","÷","×","×","×","÷","÷","÷"]));
    it('× [0.3] DIGIT TWO (NU) × [25.03] DIGIT THREE (NU) ÷ [999.0] CJK UNIFIED IDEOGRAPH-672C (ID) ÷ [0.3]', () => test([0x0032, 0x0033, 0x672C], ["×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER SMALL A (CJ_NS) ÷ [999.0] KATAKANA LETTER BE (ID) × [21.03] KATAKANA LETTER SMALL TU (CJ_NS) ÷ [999.0] KATAKANA LETTER TO (ID) ÷ [999.0] DIGIT TWO (NU) × [25.03] DIGIT SIX (NU) ÷ [999.0] CJK UNIFIED IDEOGRAPH-5B57 (ID) ÷ [999.0] HIRAGANA LETTER WO (ID) ÷ [0.3]', () => test([0x30A1, 0x30D9, 0x30C3, 0x30C8, 0x0032, 0x0036, 0x5B57, 0x3092], ["×","÷","×","÷","÷","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-4F8B (ID) × [21.03] FULLWIDTH COLON (NS) ÷ [999.0] POUND SIGN (PR) × [25.01] DIGIT TWO (NU) × [25.03] DIGIT THREE (NU) ÷ [0.3]', () => test([0x4F8B, 0xFF1A, 0x00A3, 0x0032, 0x0033], ["×","×","÷","×","×","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-8A18 (ID) ÷ [999.0] CJK UNIFIED IDEOGRAPH-53F7 (ID) × [7.01] SPACE (SP) ÷ [18.0] POUND SIGN (PR) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [0.3]', () => test([0x8A18, 0x53F7, 0x0020, 0x00A3, 0x3002], ["×","÷","×","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER RE (ID) ÷ [999.0] HIRAGANA LETTER RU (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] LATIN SMALL LETTER Q (AL) × [28.0] LATIN SMALL LETTER U (AL) ÷ [0.3]', () => test([0x308C, 0x308B, 0x3002, 0x0071, 0x0075], ["×","÷","×","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER MA (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [0.3]', () => test([0x307E, 0x3002], ["×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER MA (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x307E, 0x3002, 0x0061, 0x0062, 0x0020], ["×","×","÷","×","×","÷"]));
    it('× [0.3] HIRAGANA LETTER RU (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-6570 (ID) ÷ [0.3]', () => test([0x308B, 0x3002, 0x6570], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER RU (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] HIRAGANA LETTER KO (ID) ÷ [0.3]', () => test([0x308B, 0x3002, 0x3053], ["×","×","÷","÷"]));
    it('× [0.3] HIRAGANA LETTER I (ID) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] KATAKANA LETTER PA (ID) ÷ [0.3]', () => test([0x3044, 0x3002, 0x30D1], ["×","×","÷","÷"]));
    it('× [0.3] KATAKANA LETTER GA (ID) ÷ [999.0] KATAKANA LETTER WA (ID) × [13.02] RIGHT CORNER BRACKET (CL) × [13.02] IDEOGRAPHIC FULL STOP (CL) ÷ [999.0] HIRAGANA LETTER KO (ID) ÷ [999.0] HIRAGANA LETTER RE (ID) ÷ [0.3]', () => test([0x30AC, 0x30EF, 0x300D, 0x3002, 0x3053, 0x308C], ["×","÷","×","×","÷","÷","÷"]));
    it('× [0.3] CJK UNIFIED IDEOGRAPH-8A9E (ID) ÷ [999.0] HIRAGANA LETTER NO (ID) ÷ [999.0] LATIN SMALL LETTER I (AL) × [28.0] LATIN SMALL LETTER O (AL) ÷ [999.0] HIRAGANA LETTER NO (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] DIGIT TWO (NU) ÷ [999.0] CJK UNIFIED IDEOGRAPH-5B57 (ID) ÷ [999.0] HIRAGANA LETTER WO (ID) ÷ [0.3]', () => test([0x8A9E, 0x306E, 0x0069, 0x006F, 0x306E, 0x3001, 0x0032, 0x5B57, 0x3092], ["×","÷","÷","×","÷","×","÷","÷","÷","÷"]));
    it('× [0.3] IDEOGRAPHIC COMMA (CL) ÷ [999.0] CJK UNIFIED IDEOGRAPH-548C (ID) ÷ [0.3]', () => test([0x3001, 0x548C], ["×","÷","÷"]));
    it('× [0.3] IDEOGRAPHIC COMMA (CL) ÷ [999.0] KATAKANA LETTER TA (ID) ÷ [0.3]', () => test([0x3001, 0x30BF], ["×","÷","÷"]));
    it('× [0.3] IDEOGRAPHIC COMMA (CL) ÷ [999.0] HIRAGANA LETTER KA (ID) ÷ [0.3]', () => test([0x3001, 0x304B], ["×","÷","÷"]));
    it('× [0.3] IDEOGRAPHIC COMMA (CL) ÷ [999.0] HIRAGANA LETTER KO (ID) ÷ [999.0] HIRAGANA LETTER RE (ID) ÷ [999.0] HIRAGANA LETTER DE (ID) ÷ [999.0] HIRAGANA LETTER HA (ID) × [7.01] SPACE (SP) ÷ [0.3]', () => test([0x3001, 0x3053, 0x308C, 0x3067, 0x306F, 0x0020], ["×","÷","÷","÷","÷","×","÷"]));
    it('× [0.3] HIRAGANA LETTER SI (ID) × [13.02] IDEOGRAPHIC COMMA (CL) ÷ [999.0] LATIN SMALL LETTER A (AL) × [28.0] LATIN SMALL LETTER B (AL) ÷ [999.0] HIRAGANA LETTER TO (ID) ÷ [0.3]', () => test([0x3057, 0x3001, 0x0061, 0x0062, 0x3068], ["×","×","÷","×","÷","÷"]));
    it('× [0.3] LATIN SMALL LETTER A (AL) ÷ [999.0] REGIONAL INDICATOR SYMBOL LETTER A (RI) ÷ [999.0] LATIN SMALL LETTER B (AL) ÷ [0.3]', () => test([0x0061, 0x1F1E6, 0x0062], ["×","÷","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER R (RI) × [30.11] REGIONAL INDICATOR SYMBOL LETTER U (RI) ÷ [0.3]', () => test([0x1F1F7, 0x1F1FA], ["×","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER R (RI) × [30.11] REGIONAL INDICATOR SYMBOL LETTER U (RI) ÷ [30.13] REGIONAL INDICATOR SYMBOL LETTER S (RI) ÷ [0.3]', () => test([0x1F1F7, 0x1F1FA, 0x1F1F8], ["×","×","÷","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER R (RI) × [30.11] REGIONAL INDICATOR SYMBOL LETTER U (RI) ÷ [30.13] REGIONAL INDICATOR SYMBOL LETTER S (RI) × [30.11] REGIONAL INDICATOR SYMBOL LETTER E (RI) ÷ [0.3]', () => test([0x1F1F7, 0x1F1FA, 0x1F1F8, 0x1F1EA], ["×","×","÷","×","÷"]));
    it('× [0.3] REGIONAL INDICATOR SYMBOL LETTER R (RI) × [30.11] REGIONAL INDICATOR SYMBOL LETTER U (RI) × [7.02] ZERO WIDTH SPACE (ZW) ÷ [8.0] REGIONAL INDICATOR SYMBOL LETTER S (RI) × [30.12] REGIONAL INDICATOR SYMBOL LETTER E (RI) ÷ [0.3]', () => test([0x1F1F7, 0x1F1FA, 0x200B, 0x1F1F8, 0x1F1EA], ["×","×","×","÷","×","÷"]));
    it('× [0.3] HEBREW LETTER ALEF (HL) × [21.02] HYPHEN-MINUS (HY) × [21.1] HEBREW LETTER ALEF (HL) ÷ [0.3]', () => test([0x05D0, 0x002D, 0x05D0], ["×","×","×","÷"]));
});
